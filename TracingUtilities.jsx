var noOutlineExpr = /#noOutline/;
var OutlineBreakExpr = /#BREAK/;



function OpenDoc(document){
    
    if(app.documents.length == 0)return;   
    if(app.activeDocument == null)return;
    
var doc = document;  

var allLayers = [];
var externals = [];
allLayers = collectAllOutlineLayers(doc, doc, externals);

for(var i = 0; i<externals.length; i++){
    ValidateLayerAndOpen(externals[i], document);
}
collapseAllGroups();
 }  
  
  function collapseAllGroups(){
      
var idcollapseAllGroupsEvent = stringIDToTypeID( "collapseAllGroupsEvent" );
var desc1776 = new ActionDescriptor();
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc1776.putBoolean( iddontRecord, true );
executeAction( idcollapseAllGroupsEvent, desc1776, DialogModes.NO );
      
      }
  
  function ValidateLayerAndOpen(layer, doc){
               //make sure that active document has not changed
                  if(app.activeDocument != doc)
                      app.activeDocument = doc;
                  
                  if(layer.kind != LayerKind.SMARTOBJECT)return;

                  select_layerById(layer.id);

              runMenuItem(stringIDToTypeID('placedLayerEditContents'));
            
            //make sure that active document has not changed
              if(app.activeDocument != doc){
                      
                      OpenDoc (app.activeDocument);
                      app.activeDocument = doc;
                      
                      }
      }
  
  
  function OpenArray(arr,doc){     
        if(arr == null)return;
        
 
        for (var ilayer = 0; ilayer < arr.length; ilayer++)    
              ValidateLayerAndOpen(arr[ilayer],doc);     
      
}

function collectAllOutlineLayers (root, document,externals){
    var expr = /outline/;
    var checkFor = "ArtLayer";

    for (var m = 0, len = root.layers.length ; m < len; ++m){
        var theLayer = root.layers[m];
     
        if (theLayer.typename.localeCompare(checkFor) == 0){
            
              if (theLayer.kind == LayerKind.SMARTOBJECT)    
              {                   
                  if(expr.test(theLayer.name.toLowerCase())){      
                           if(!isPSB(theLayer))ValidateLayerAndOpen(theLayer, document);
                           else externals.push(theLayer);
                    }
             }

          

        }else{

            if(!noOutlineExpr.test(theLayer.name))collectAllOutlineLayers(theLayer, document, externals);
        }

        if(OutlineBreakExpr.test(theLayer.name))break;
    }


}


function collectAllLayers (doc, allLayers){
    for (var m = 0; m < doc.layers.length; m++){
        var theLayer = doc.layers[m];
        if (theLayer.typename === "ArtLayer"){
            allLayers.push(theLayer);
        }else{
            collectAllLayers(theLayer, allLayers);
        }
    }
    return allLayers;
}

function isPSB(layer){

    try {         
        var r = new ActionReference();     
        r.putProperty(stringIDToTypeID("property"), stringIDToTypeID("smartObject"));  
        r.putIdentifier(stringIDToTypeID("layer"), layer.id);  
        var name = executeActionGet(r).getObjectValue(stringIDToTypeID("smartObject")).getString(stringIDToTypeID("fileReference"));         
         
        var n = name.lastIndexOf(".");  
       
        if (n < 0) return false;  

        n = name.substr(n+1).toLowerCase();
     
        return n != "ai";
        }  
    catch (e) { return "error"; }  
    
}

function ShowLayer(layer){
    var id = charIDToTypeID( "Shw " );
    var desc503 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var list53 = new ActionList();
            var ref77 = new ActionReference();
            var idLyr = charIDToTypeID( "Lyr " );
            ref77.putIdentifier( idLyr, layer.id );
        list53.putReference( ref77 );
        desc503.putList( idnull, list53 );
    
        executeAction( id, desc503, DialogModes.NO );
  
  }

  function HideLayer(layer){
var id = charIDToTypeID( "Hd  " );

    var desc503 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var list53 = new ActionList();
            var ref77 = new ActionReference();
            var idLyr = charIDToTypeID( "Lyr " );
            ref77.putIdentifier( idLyr, layer.id );
        list53.putReference( ref77 );
        desc503.putList( idnull, list53 );
    
        executeAction( id, desc503, DialogModes.NO );
  
  }

cTID = function(s) { return app.charIDToTypeID(s); };
sTID = function(s) { return app.stringIDToTypeID(s); };

function newGroupFromLayers(doc) {
    var desc = new ActionDescriptor();
    var ref = new ActionReference();
    ref.putClass( sTID('layerSection') );
    desc.putReference( cTID('null'), ref );
    var lref = new ActionReference();
    lref.putEnumerated( cTID('Lyr '), cTID('Ordn'), cTID('Trgt') );
    desc.putReference( cTID('From'), lref);
    executeAction( cTID('Mk  '), desc, DialogModes.NO );
};

function deselectLayers() {   
    var desc01 = new ActionDescriptor();   
        var ref01 = new ActionReference();   
        ref01.putEnumerated( charIDToTypeID('Lyr '), charIDToTypeID('Ordn'), charIDToTypeID('Trgt') );   
    desc01.putReference( charIDToTypeID('null'), ref01 );   
    executeAction( stringIDToTypeID('selectNoLayers'), desc01, DialogModes.NO );   
}; 

function undo() {
   executeAction(cTID("undo", undefined, DialogModes.NO));
};

function getSelectedSmartObjects(doc) {
   
  var group = doc.activeLayer;
  var selectedLayers = getSelectedLayersAll(doc);
    var filteredLayers =[];

    getSmartObjects(selectedLayers,filteredLayers);       

  return filteredLayers;
}

function getSelectedLayersIdx(){ 
      var selectedLayers = new Array; 
      var ref = new ActionReference(); 
      ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") ); 
      var desc = executeActionGet(ref); 
      if( desc.hasKey( stringIDToTypeID( 'targetLayers' ) ) ){ 
         desc = desc.getList( stringIDToTypeID( 'targetLayers' )); 
          var c = desc.count 
          var selectedLayers = new Array(); 
          for(var i=0;i<c;i++){ 
            try{ 
               activeDocument.backgroundLayer; 
               selectedLayers.push(  desc.getReference( i ).getIndex() ); 
            }catch(e){ 
               selectedLayers.push(  desc.getReference( i ).getIndex()+1 ); 
            } 
          } 
       }else{ 
         var ref = new ActionReference(); 
         ref.putProperty( charIDToTypeID("Prpr") , charIDToTypeID( "ItmI" )); 
         ref.putEnumerated( charIDToTypeID("Lyr "), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") ); 
         try{ 
            activeDocument.backgroundLayer; 
            selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( "ItmI" ))-1); 
         }catch(e){ 
            selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( "ItmI" ))); 
         } 
      } 
      return selectedLayers; 
 };    
    
    function GetSelectedLayerCount(){
        var result = 0;
          var ref = new ActionReference(); 
      ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") ); 
      var desc = executeActionGet(ref); 
      if( desc.hasKey( stringIDToTypeID( 'targetLayers' ) ) ){ 
         desc = desc.getList( stringIDToTypeID( 'targetLayers' )); 
          result = desc.count 
          }      
      return result;        
        }
    
    function makeActiveByIndex( idx, visible,add ){ 
    if(visible == undefined) visible = false;
    if(add == undefined) add=false;
    var desc = new ActionDescriptor(); 
      var ref = new ActionReference(); 
      ref.putIndex(charIDToTypeID( "Lyr " ), idx) 
      desc.putReference( charIDToTypeID( "null" ), ref ); 
      if(add) desc.putEnumerated(stringIDToTypeID('selectionModifier'), stringIDToTypeID('selectionModifierType'), stringIDToTypeID('addToSelection'));
      desc.putBoolean( charIDToTypeID( "MkVs" ), visible ); 
   executeAction( charIDToTypeID( "slct" ), desc, DialogModes.NO ); 
};

function select_layerById(id, add, viz)
{  
try {
    var d = new ActionDescriptor();

    if (viz == undefined) viz = false;

    var r = new ActionReference();

    if (typeof(id) == "string") r.putName( charIDToTypeID( "Lyr " ), id);
    else                        r.putIdentifier( charIDToTypeID( "Lyr " ), id);

    d.putReference( charIDToTypeID( "null" ), r );

    d.putBoolean( charIDToTypeID( "MkVs" ), viz );

    if (add == true) d.putEnumerated( stringIDToTypeID( "selectionModifier" ), stringIDToTypeID( "selectionModifierType" ), stringIDToTypeID( "addToSelection" ) );
    if (add == -1)   d.putEnumerated( stringIDToTypeID( "selectionModifier" ), stringIDToTypeID( "selectionModifierType" ), stringIDToTypeID( "removeFromSelection" ) );

    var ok = true;

    try { executeAction( charIDToTypeID( "slct" ), d, DialogModes.NO ); } catch(e) { ok = false; }

    d = r = null;
    $.gc() 
    return ok;
    }
catch (e) { alert(e); return false; }
}
function getSelectedLayersAll(doc) {  
var layers = [];
var arr = getSelectedLayersIdx();
for(var i=0; i<arr.length; i++){
           makeActiveByIndex(arr[i])
           layers.push(app.activeDocument.activeLayer);
}
  return layers;
}


function openSmartObject (objectRef) { 
var id6 = stringIDToTypeID( "placedLayerEditContents" );
var desc3 = new ActionDescriptor();
executeAction( id6, desc3, DialogModes.NO );

}

if(typeof jamActions!=='object') {var jamActions={};(function() {jamActions.isActionsFile=function(file) {return(file.type==='8BAC')||file.name.match(/\.atn$/i);};jamActions.isActionsPalette=function(file) {return((file.type==='8BPF')&&file.name.match(/^Actions Palette$/i))||file.name.match(/^Actions Palette.psp$/i);};function readBEInt(file,byteCount) {var bytes=file.read(byteCount);var intValue=0;for(var index=0;index<byteCount;index++) {intValue=(intValue<<8)+bytes.charCodeAt(index);} return intValue;} function readBytes(file,byteCount) {return file.read(byteCount);} function readByteString(file) {var stringLength=readBEInt(file,4);return readBytes(file,stringLength);} function readUnicodeString(file) {var unicodeString="";var unicodeLength=readBEInt(file,4);for(var index=0;index<unicodeLength;index++) {var unicodeChar=readBEInt(file,2);if(unicodeChar!==0) {unicodeString+=String.fromCharCode(unicodeChar);}} return unicodeString;} function readEventId(file) {var eventId=0;var eventType=readBytes(file,4);switch(eventType) {case'TEXT':eventId=app.stringIDToTypeID(readByteString(file));break;case'long':eventId=app.charIDToTypeID(readBytes(file,4));break;default:throw new Error("[jamActions readEventId] Unrecognized event type: '"+eventType+"'");break;} return eventId;} function skipDouble(file) {file.seek(8,1);} function skipDoubles(file,doubleCount) {file.seek(doubleCount*8,1);} function skipInt8(file) {file.seek(1,1);} function skipInt16(file) {file.seek(2,1);} function skipInt32(file) {file.seek(4,1);} function skipInt64(file) {file.seek(8,1);} function skipBytes(file,byteCount) {file.seek(byteCount,1);} function skipByteString(file) {var stringLength=readBEInt(file,4);skipBytes(file,stringLength);} function skipUnicodeString(file) {var unicodeLength=readBEInt(file,4);skipBytes(file,unicodeLength*2);} function skipId(file) {var idLength=readBEInt(file,4);if(idLength) {skipBytes(file,idLength);} else {skipBytes(file,4);}} function skipClass(file) {skipUnicodeString(file);skipId(file);} function skipObject(file) {skipClass(file);var itemCount=readBEInt(file,4);for(var itemIndex=0;itemIndex<itemCount;itemIndex++) {skipId(file);skipItem(file);}} function skipList(file) {var itemCount=readBEInt(file,4);for(var itemIndex=0;itemIndex<itemCount;itemIndex++) {skipItem(file);}} function skipItem(file) {var typeId=readBytes(file,4);switch(typeId) {case'obj ':skipReference(file);break;case'Objc':case'GlbO':skipObject(file);break;case'type':case'GlbC':skipClass(file);break;case'VlLs':skipList(file);break;case'doub':skipDouble(file);break;case'UntF':skipBytes(file,4);skipDouble(file);break;case'TEXT':skipUnicodeString(file);break;case'enum':skipId(file);skipId(file);break;case'long':skipInt32(file);break;case'comp':skipInt64(file);break;case'bool':skipInt8(file);break;case'alis':skipByteString(file);break;case'Pth ':skipByteString(file);break;case'tdta':skipByteString(file);break;case'ObAr':var objCount=readBEInt(file,4);skipClass(file);var itemCount=readBEInt(file,4);for(var itemIndex=0;itemIndex<itemCount;itemIndex++) {skipId(file);skipInt32(file);skipInt32(file);var doublesCount=readBEInt(file,4);skipDoubles(file,doublesCount);} break;default:throw new Error("[jamActions skipItem] Unrecognized item type: '"+typeId+"'");break;}} function skipReference(file) {var itemCount=readBEInt(file,4);for(var itemIndex=0;itemIndex<itemCount;itemIndex++) {var formId=readBytes(file,4);skipClass(file);switch(formId) {case'Clss':break;case'prop':skipId(file);break;case'Enmr':skipId(file);skipId(file);break;case'rele':skipInt32(file);break;case'Idnt':skipInt32(file);break;case'indx':skipInt32(file);break;case'name':skipUnicodeString(file);break;default:throw new Error("[jamActions skipReference] Unrecognized item form: '"+formId+"'");break;}}} jamActions.readActionDescriptor=function(file,insertVersionPrefix) {var versionPrefix="\x00\x00\x00\x10";var start=file.tell();if(!insertVersionPrefix) {if(file.read(4)===versionPrefix) {versionPrefix="";} else {throw new Error('[jamActions.readActionDescriptor] Unrecognized version prefix');}} skipObject(file);var end=file.tell();file.seek(start,0);var stream=versionPrefix+file.read(end-start);var actionDescriptor=new ActionDescriptor();actionDescriptor.fromStream(stream);return actionDescriptor;};jamActions.dataFromActionsFile=function(actionsFile,isPalette) {var that=this;function parseActionSet(file) {var actionSet={};actionSet.name=localize(readUnicodeString(file));actionSet.expanded=(readBEInt(file,1)!==0);var actionCount=readBEInt(file,4);actionSet.actions=[];for(var actionIndex=0;actionIndex<actionCount;actionIndex++) {var action={};action.functionKey=readBEInt(file,2);action.shiftKey=(readBEInt(file,1)!==0);action.commandKey=(readBEInt(file,1)!==0);action.colorIndex=readBEInt(file,2);action.name=localize(readUnicodeString(file));action.expanded=(readBEInt(file,1)!==0);var commandCount=readBEInt(file,4);action.commands=[];for(var commandIndex=0;commandIndex<commandCount;commandIndex++) {var command={};command.expanded=(readBEInt(file,1)!==0);command.enabled=(readBEInt(file,1)!==0);command.withDialog=(readBEInt(file,1)!==0);command.dialogOptions=readBEInt(file,1);command.eventId=readEventId(file);command.dictionaryName=readByteString(file);if(readBEInt(file,4)!==0) {command.actionDescriptor=that.readActionDescriptor(file,true);} action.commands.push(command);} actionSet.actions.push(action);} return actionSet;} var file;if(typeof actionsFile==='string') {file=new File(actionsFile);} else if(actionsFile instanceof File) {file=actionsFile;} else {throw new Error('[jamActions.dataFromActionsFile] Invalid argument');} var fileData;if(file.open("r")) {try {file.encoding='BINARY';var fileVersion=readBEInt(file,4);if(fileVersion===16) {fileData={};fileData.version=fileVersion;if(isPalette) {fileData.actionSets=[];var actionSetCount=readBEInt(file,4);for(var actionSetIndex=0;actionSetIndex<actionSetCount;actionSetIndex++) {fileData.actionSets.push(parseActionSet(file));}} else {fileData.actionSet=parseActionSet(file);}} else {fileData="Unsupported actions file version: "+fileVersion;}} catch(e) {fileData=e.message;} finally {file.close();}} else {fileData="Cannot open file";} return fileData;};jamActions.isLocalPlayCommand=function(command,actionSetName) {var localPlayCommand=null;if(command.eventId===app.stringIDToTypeID("play")) {var targetId=app.stringIDToTypeID("target");if(command.actionDescriptor.hasKey(targetId)) {var localReference=command.actionDescriptor.getReference(targetId);do {try{var desiredClassId=localReference.getDesiredClass();}catch(e){break;} switch(desiredClassId) {case app.stringIDToTypeID("command"):var localCommandIndex=localReference.getIndex()-1;break;case app.stringIDToTypeID("action"):var localActionName=localReference.getName();break;case app.stringIDToTypeID("actionSet"):var localActionSetName=localReference.getName();break;} localReference=localReference.getContainer();} while(localReference);} var continueId=app.stringIDToTypeID("continue");if(command.actionDescriptor.hasKey(continueId)) {var localContinue=command.actionDescriptor.getBoolean(continueId);} if((typeof localActionSetName!=='undefined')&&(localActionSetName===actionSetName)) {localPlayCommand=[localActionName,localCommandIndex,localContinue];}} return localPlayCommand;};jamActions.determineDialogMode=function(command) {var dialogMode;switch(command.dialogOptions) {case 0:dialogMode=command.withDialog?DialogModes.ALL:DialogModes.NO;break;case 2:dialogMode=DialogModes.NO;break;case 1:case 3:dialogMode=DialogModes.ALL;break;} return dialogMode;} var globalCommandHandler=null;jamActions.setCommandHandler=function(commandHandler) {globalCommandHandler=commandHandler;};jamActions.traverseAction=function(actionSet,actionLocator,fromCommandIndex,continuePlay) {function handleCommands(commands) {var commandMax=(continuePlay)?commands.length:fromCommandIndex+1;for(var commandIndex=fromCommandIndex;commandIndex<commandMax;commandIndex++) {if(globalCommandHandler!==null) {globalCommandHandler(commands[commandIndex]);}}} if(typeof fromCommandIndex==='undefined') {fromCommandIndex=0;continuePlay=true;} var actions=actionSet.actions;if(typeof actionLocator==='string') {var actionName=actionLocator;for(var actionIndex=0;actionIndex<actions.length;actionIndex++) {var action=actions[actionIndex];if(action.name===actionName) {handleCommands(action.commands);break;}}} else if(typeof actionLocator==='number') {var actionIndex=actionLocator;if((actionIndex>=0)&&(actionIndex<actions.length)) {handleCommands(actions[actionIndex].commands);}}};}());}
if(typeof jamBooks!=='object') {var jamBooks={};(function() {jamBooks.isColorBookFile=function(file) {return(file.type==='8BCB')||file.name.match(/\.acb$/i);};jamBooks.dataFromColorBookFile=function(colorBookFile,actualComponents) {var file;if(typeof colorBookFile==='string') {file=new File(colorBookFile);} else if(colorBookFile instanceof File) {file=colorBookFile;} var colorBookData;if(file.open("r")) {try {file.encoding='BINARY';var magicNumber=file.read(4);if(magicNumber==='8BCB') {function readBEInt(file,byteCount) {var bytes=file.read(byteCount);var intValue=0;for(var index=0;index<byteCount;index++) {intValue=(intValue<<8)+bytes.charCodeAt(index);} return intValue;} function readUnicodeString(file) {var unicodeString="";var unicodeLength=readBEInt(file,4);for(var index=0;index<unicodeLength;index++) {var unicodeChar=readBEInt(file,2);if(unicodeChar!==0) {unicodeString+=String.fromCharCode(unicodeChar);}} return unicodeString;} var formatVersion=readBEInt(file,2);if(formatVersion===1) {var colorBook={};colorBook["bookID"]=readBEInt(file,2);colorBook["bookName"]=readUnicodeString(file);colorBook["colorNamePrefix"]=readUnicodeString(file);colorBook["colorNameSuffix"]=readUnicodeString(file);colorBook["bookDescription"]=readUnicodeString(file);var colorCount=readBEInt(file,2);colorBook["colorsPerPage"]=readBEInt(file,2);colorBook["keyColorIndex"]=readBEInt(file,2);var colorSpace=readBEInt(file,2);var colorSpaces=["RGB",null,"CMYK",null,null,null,null,"Lab"];if((colorSpace<0)||(colorSpace>colorSpaces.length)) {throw new Error("[jamBooks.dataFromColorBookFile] Invalid color space: "+colorSpace);} else {colorBook["colorSpace"]=colorSpaces[colorSpace];} var colors=[];for(var colorIndex=0;colorIndex<colorCount;colorIndex++) {var color={};color["colorName"]=readUnicodeString(file);color["colorKey"]=file.read(6);var components=file.read((colorSpace===2)?4:3);var componentArr=[];for(componentIndex=0;componentIndex<components.length;componentIndex++) {var componentValue=components.charCodeAt(componentIndex);if(actualComponents) {switch(colorSpace) {case 2:componentValue=(255-componentValue)/255*100;break;case 7:if(componentIndex>0) {componentValue-=128;} else {componentValue=componentValue/255*100;} break;}} componentArr.push(componentValue);} color[(actualComponents)?"actualComponents":"rawComponents"]=componentArr;colors.push(color);} colorBook["colors"]=colors;if(!file.eof) {colorBook["spotProcess"]=file.read(8);} colorBookData=colorBook;} else {throw new Error("[jamBooks.dataFromColorBookFile] Unrecognized format version: "+formatVersion);}} else {throw new Error("[jamBooks.dataFromColorBookFile] Unrecognized magic number: "+magicNumber);}} catch(e) {colorBookData=e.message;} finally {file.close();}} else {colorBookData="[jamBooks.dataFromColorBookFile] Cannot open file";} return colorBookData;};jamBooks.dataToColorBookFile=function(colorBookFile,colorBookData) {var file;if(typeof colorBookFile==='string') {file=new File(colorBookFile);} else if(colorBookFile instanceof File) {file=colorBookFile;} var result="";if(file.open('w','8BCB','8BIM')) {try {function writeBEInt(file,byteCount,intValue) {var bytes="";for(var index=0;index<byteCount;index++) {bytes=String.fromCharCode(intValue&0xFF)+bytes;intValue>>=8;} file.write(bytes);} function writeUnicodeString(file,unicodeString) {var unicodeLength=unicodeString.length;writeBEInt(file,4,unicodeLength);for(var index=0;index<unicodeLength;index++) {writeBEInt(file,2,unicodeString.charCodeAt(index));}} file.encoding="BINARY";file.write('8BCB');writeBEInt(file,2,1);writeBEInt(file,2,colorBookData["bookID"]);writeUnicodeString(file,colorBookData["bookName"]);writeUnicodeString(file,colorBookData["colorNamePrefix"]);writeUnicodeString(file,colorBookData["colorNameSuffix"]);writeUnicodeString(file,colorBookData["bookDescription"]);var colors=colorBookData["colors"];var colorCount=colors.length;writeBEInt(file,2,colorCount);writeBEInt(file,2,colorBookData["colorsPerPage"]);if("keyColorIndex"in colorBookData) {writeBEInt(file,2,colorBookData["keyColorIndex"]);} else if("keyColorPage"in colorBookData) {writeBEInt(file,2,colorBookData["keyColorPage"]);} var colorSpace=colorBookData["colorSpace"];var colorSpaces={"RGB":0,"CMYK":2,"Lab":7};if(colorSpace in colorSpaces) {writeBEInt(file,2,colorSpaces[colorSpace]);} else {throw new Error("[jamBooks.dataToColorBookFile] Invalid color space: "+jamJSON.stringify(colorSpace));} for(var colorIndex=0;colorIndex<colorCount;colorIndex++) {var color=colors[colorIndex];writeUnicodeString(file,color["colorName"]);var colorKey=color["colorKey"];if(colorKey.length===6) {file.write(colorKey);} else {throw new Error("[jamBooks.dataToColorBookFile] Invalid color key: "+jamJSON.stringify(colorKey));} if("actualComponents"in color) {var components=color["actualComponents"];for(componentIndex=0;componentIndex<components.length;componentIndex++) {var componentValue=components[componentIndex];switch(colorSpace) {case"CMYK":componentValue=255-Math.round(componentValue*255/100);break;case"Lab":if(componentIndex>0) {componentValue=Math.round(componentValue)+128;} else {componentValue=Math.round(componentValue*255/100);} break;case"RGB":componentValue=Math.round(componentValue);break;} file.write(String.fromCharCode(componentValue));}} else if("rawComponents"in color) {var components=color["rawComponents"];for(componentIndex=0;componentIndex<components.length;componentIndex++) {file.write(String.fromCharCode(components[componentIndex]));}} else if("components"in color) {var components=color["components"];for(componentIndex=0;componentIndex<components.length;componentIndex++) {file.write(String.fromCharCode(components[componentIndex]));}}} if("spotProcess"in colorBookData) {file.write(colorBookData["spotProcess"]);}} catch(e) {result=e.message;} finally {file.close();}} else {result="[jamBooks.dataToColorBookFile] Cannot open file";} return result;};jamBooks.getColorBookFileColors=function(colorBookFile,roundComponents) {var colorBookColors=null;var colorBookData=this.dataFromColorBookFile(colorBookFile,true);if(colorBookData!=='string') {colorBookColors={};colorBookColors["bookFile"]=File.decode(colorBookFile.name);colorBookColors["bookName"]=localize(colorBookData["bookName"]);colorBookColors["bookDescription"]=localize(colorBookData["bookDescription"]);var colorNamePrefix=localize(colorBookData["colorNamePrefix"]);var colorNameSuffix=localize(colorBookData["colorNameSuffix"]);var colorSpace=colorBookData["colorSpace"];var colors=colorBookData["colors"];bookColors=[];for(var i=0;i<colors.length;i++) {var bookColor={};var colorName=localize(colors[i]["colorName"]);if(colorName) {bookColor["name"]=colorNamePrefix+colorName+colorNameSuffix;var components=colors[i]["actualComponents"];var color={};switch(colorSpace) {case"CMYK":color["C"]=(roundComponents)?Math.round(components[0]):components[0];color["M"]=(roundComponents)?Math.round(components[1]):components[1];color["Y"]=(roundComponents)?Math.round(components[2]):components[2];color["K"]=(roundComponents)?Math.round(components[3]):components[3];break;case"Lab":color["L"]=(roundComponents)?Math.round(components[0]):components[0];color["a"]=components[1];color["b"]=components[2];break;case"RGB":color["R"]=components[0];color["G"]=components[1];color["B"]=components[2];break;} bookColor["color"]=color;bookColors.push(bookColor);}} colorBookColors["bookColors"]=bookColors;} return colorBookColors;};}());}
if(typeof jamColors!=='object') {var jamColors={};(function() {var namedColorsSets={"css":"w3c","svg":"w3c","w3c":{"colorClass":"RGBColor","colorNames":{"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":"darkgray","darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":"darkslategray","darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":"dimgray","dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":"gray","honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":"lightgray","lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":"lightslategray","lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":"slategray","snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]},"fallbackColor":"black","info":["http://www.w3.org/TR/css3-color/#svg-color","https://www.w3.org/TR/css-color-4/#changes-from-3","http://www.w3.org/TR/SVG/types.html#ColorKeywords","http://en.wikipedia.org/wiki/X11_color_names"]},"x11":{"colorClass":"RGBColor","colorNames":{"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"antiquewhite1":[255,239,219],"antiquewhite2":[238,223,204],"antiquewhite3":[205,192,176],"antiquewhite4":[139,131,120],"aquamarine":[127,255,212],"aquamarine1":[127,255,212],"aquamarine2":[118,238,198],"aquamarine3":[102,205,170],"aquamarine4":[69,139,116],"azure":[240,255,255],"azure1":[240,255,255],"azure2":[224,238,238],"azure3":[193,205,205],"azure4":[131,139,139],"beige":[245,245,220],"bisque":[255,228,196],"bisque1":[255,228,196],"bisque2":[238,213,183],"bisque3":[205,183,158],"bisque4":[139,125,107],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blue1":[0,0,255],"blue2":[0,0,238],"blue3":[0,0,205],"blue4":[0,0,139],"blueviolet":[138,43,226],"brown":[165,42,42],"brown1":[255,64,64],"brown2":[238,59,59],"brown3":[205,51,51],"brown4":[139,35,35],"burlywood":[222,184,135],"burlywood1":[255,211,155],"burlywood2":[238,197,145],"burlywood3":[205,170,125],"burlywood4":[139,115,85],"cadetblue":[95,158,160],"cadetblue1":[152,245,255],"cadetblue2":[142,229,238],"cadetblue3":[122,197,205],"cadetblue4":[83,134,139],"chartreuse":[127,255,0],"chartreuse1":[127,255,0],"chartreuse2":[118,238,0],"chartreuse3":[102,205,0],"chartreuse4":[69,139,0],"chocolate":[210,105,30],"chocolate1":[255,127,36],"chocolate2":[238,118,33],"chocolate3":[205,102,29],"chocolate4":[139,69,19],"coral":[255,127,80],"coral1":[255,114,86],"coral2":[238,106,80],"coral3":[205,91,69],"coral4":[139,62,47],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"cornsilk1":[255,248,220],"cornsilk2":[238,232,205],"cornsilk3":[205,200,177],"cornsilk4":[139,136,120],"cyan":[0,255,255],"cyan1":[0,255,255],"cyan2":[0,238,238],"cyan3":[0,205,205],"cyan4":[0,139,139],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgoldenrod1":[255,185,15],"darkgoldenrod2":[238,173,14],"darkgoldenrod3":[205,149,12],"darkgoldenrod4":[139,101,8],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":"darkgray","darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkolivegreen1":[202,255,112],"darkolivegreen2":[188,238,104],"darkolivegreen3":[162,205,90],"darkolivegreen4":[110,139,61],"darkorange":[255,140,0],"darkorange1":[255,127,0],"darkorange2":[238,118,0],"darkorange3":[205,102,0],"darkorange4":[139,69,0],"darkorchid":[153,50,204],"darkorchid1":[191,62,255],"darkorchid2":[178,58,238],"darkorchid3":[154,50,205],"darkorchid4":[104,34,139],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkseagreen1":[193,255,193],"darkseagreen2":[180,238,180],"darkseagreen3":[155,205,155],"darkseagreen4":[105,139,105],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategray1":[151,255,255],"darkslategray2":[141,238,238],"darkslategray3":[121,205,205],"darkslategray4":[82,139,139],"darkslategrey":"darkslategray","darkslategrey1":"darkslategray1","darkslategrey2":"darkslategray2","darkslategrey3":"darkslategray3","darkslategrey4":"darkslategray4","darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deeppink1":[255,20,147],"deeppink2":[238,18,137],"deeppink3":[205,16,118],"deeppink4":[139,10,80],"deepskyblue":[0,191,255],"deepskyblue1":[0,191,255],"deepskyblue2":[0,178,238],"deepskyblue3":[0,154,205],"deepskyblue4":[0,104,139],"dimgray":[105,105,105],"dimgrey":"dimgray","dodgerblue":[30,144,255],"dodgerblue1":[30,144,255],"dodgerblue2":[28,134,238],"dodgerblue3":[24,116,205],"dodgerblue4":[16,78,139],"firebrick":[178,34,34],"firebrick1":[255,48,48],"firebrick2":[238,44,44],"firebrick3":[205,38,38],"firebrick4":[139,26,26],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"gold1":[255,215,0],"gold2":[238,201,0],"gold3":[205,173,0],"gold4":[139,117,0],"goldenrod":[218,165,32],"goldenrod1":[255,193,37],"goldenrod2":[238,180,34],"goldenrod3":[205,155,29],"goldenrod4":[139,105,20],"gray":[190,190,190],"gray0":[0,0,0],"gray1":[3,3,3],"gray2":[5,5,5],"gray3":[8,8,8],"gray4":[10,10,10],"gray5":[13,13,13],"gray6":[15,15,15],"gray7":[18,18,18],"gray8":[20,20,20],"gray9":[23,23,23],"gray10":[26,26,26],"gray11":[28,28,28],"gray12":[31,31,31],"gray13":[33,33,33],"gray14":[36,36,36],"gray15":[38,38,38],"gray16":[41,41,41],"gray17":[43,43,43],"gray18":[46,46,46],"gray19":[48,48,48],"gray20":[51,51,51],"gray21":[54,54,54],"gray22":[56,56,56],"gray23":[59,59,59],"gray24":[61,61,61],"gray25":[64,64,64],"gray26":[66,66,66],"gray27":[69,69,69],"gray28":[71,71,71],"gray29":[74,74,74],"gray30":[77,77,77],"gray31":[79,79,79],"gray32":[82,82,82],"gray33":[84,84,84],"gray34":[87,87,87],"gray35":[89,89,89],"gray36":[92,92,92],"gray37":[94,94,94],"gray38":[97,97,97],"gray39":[99,99,99],"gray40":[102,102,102],"gray41":[105,105,105],"gray42":[107,107,107],"gray43":[110,110,110],"gray44":[112,112,112],"gray45":[115,115,115],"gray46":[117,117,117],"gray47":[120,120,120],"gray48":[122,122,122],"gray49":[125,125,125],"gray50":[127,127,127],"gray51":[130,130,130],"gray52":[133,133,133],"gray53":[135,135,135],"gray54":[138,138,138],"gray55":[140,140,140],"gray56":[143,143,143],"gray57":[145,145,145],"gray58":[148,148,148],"gray59":[150,150,150],"gray60":[153,153,153],"gray61":[156,156,156],"gray62":[158,158,158],"gray63":[161,161,161],"gray64":[163,163,163],"gray65":[166,166,166],"gray66":[168,168,168],"gray67":[171,171,171],"gray68":[173,173,173],"gray69":[176,176,176],"gray70":[179,179,179],"gray71":[181,181,181],"gray72":[184,184,184],"gray73":[186,186,186],"gray74":[189,189,189],"gray75":[191,191,191],"gray76":[194,194,194],"gray77":[196,196,196],"gray78":[199,199,199],"gray79":[201,201,201],"gray80":[204,204,204],"gray81":[207,207,207],"gray82":[209,209,209],"gray83":[212,212,212],"gray84":[214,214,214],"gray85":[217,217,217],"gray86":[219,219,219],"gray87":[222,222,222],"gray88":[224,224,224],"gray89":[227,227,227],"gray90":[229,229,229],"gray91":[232,232,232],"gray92":[235,235,235],"gray93":[237,237,237],"gray94":[240,240,240],"gray95":[242,242,242],"gray96":[245,245,245],"gray97":[247,247,247],"gray98":[250,250,250],"gray99":[252,252,252],"gray100":[255,255,255],"green":[0,255,0],"green1":[0,255,0],"green2":[0,238,0],"green3":[0,205,0],"green4":[0,139,0],"greenyellow":[173,255,47],"grey":"gray","grey0":"gray0","grey1":"gray1","grey2":"gray2","grey3":"gray3","grey4":"gray4","grey5":"gray5","grey6":"gray6","grey7":"gray7","grey8":"gray8","grey9":"gray9","grey10":"gray10","grey11":"gray11","grey12":"gray12","grey13":"gray13","grey14":"gray14","grey15":"gray15","grey16":"gray16","grey17":"gray17","grey18":"gray18","grey19":"gray19","grey20":"gray20","grey21":"gray21","grey22":"gray22","grey23":"gray23","grey24":"gray24","grey25":"gray25","grey26":"gray26","grey27":"gray27","grey28":"gray28","grey29":"gray29","grey30":"gray30","grey31":"gray31","grey32":"gray32","grey33":"gray33","grey34":"gray34","grey35":"gray35","grey36":"gray36","grey37":"gray37","grey38":"gray38","grey39":"gray39","grey40":"gray40","grey41":"gray41","grey42":"gray42","grey43":"gray43","grey44":"gray44","grey45":"gray45","grey46":"gray46","grey47":"gray47","grey48":"gray48","grey49":"gray49","grey50":"gray50","grey51":"gray51","grey52":"gray52","grey53":"gray53","grey54":"gray54","grey55":"gray55","grey56":"gray56","grey57":"gray57","grey58":"gray58","grey59":"gray59","grey60":"gray60","grey61":"gray61","grey62":"gray62","grey63":"gray63","grey64":"gray64","grey65":"gray65","grey66":"gray66","grey67":"gray67","grey68":"gray68","grey69":"gray69","grey70":"gray70","grey71":"gray71","grey72":"gray72","grey73":"gray73","grey74":"gray74","grey75":"gray75","grey76":"gray76","grey77":"gray77","grey78":"gray78","grey79":"gray79","grey80":"gray80","grey81":"gray81","grey82":"gray82","grey83":"gray83","grey84":"gray84","grey85":"gray85","grey86":"gray86","grey87":"gray87","grey88":"gray88","grey89":"gray89","grey90":"gray90","grey91":"gray91","grey92":"gray92","grey93":"gray93","grey94":"gray94","grey95":"gray95","grey96":"gray96","grey97":"gray97","grey98":"gray98","grey99":"gray99","grey100":"gray100","honeydew":[240,255,240],"honeydew1":[240,255,240],"honeydew2":[224,238,224],"honeydew3":[193,205,193],"honeydew4":[131,139,131],"hotpink":[255,105,180],"hotpink1":[255,110,180],"hotpink2":[238,106,167],"hotpink3":[205,96,144],"hotpink4":[139,58,98],"indianred":[205,92,92],"indianred1":[255,106,106],"indianred2":[238,99,99],"indianred3":[205,85,85],"indianred4":[139,58,58],"ivory":[255,255,240],"ivory1":[255,255,240],"ivory2":[238,238,224],"ivory3":[205,205,193],"ivory4":[139,139,131],"khaki":[240,230,140],"khaki1":[255,246,143],"khaki2":[238,230,133],"khaki3":[205,198,115],"khaki4":[139,134,78],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lavenderblush1":[255,240,245],"lavenderblush2":[238,224,229],"lavenderblush3":[205,193,197],"lavenderblush4":[139,131,134],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lemonchiffon1":[255,250,205],"lemonchiffon2":[238,233,191],"lemonchiffon3":[205,201,165],"lemonchiffon4":[139,137,112],"lightblue":[173,216,230],"lightblue1":[191,239,255],"lightblue2":[178,223,238],"lightblue3":[154,192,205],"lightblue4":[104,131,139],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightcyan1":[224,255,255],"lightcyan2":[209,238,238],"lightcyan3":[180,205,205],"lightcyan4":[122,139,139],"lightgoldenrod":[238,221,130],"lightgoldenrod1":[255,236,139],"lightgoldenrod2":[238,220,130],"lightgoldenrod3":[205,190,112],"lightgoldenrod4":[139,129,76],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":"lightgray","lightpink":[255,182,193],"lightpink1":[255,174,185],"lightpink2":[238,162,173],"lightpink3":[205,140,149],"lightpink4":[139,95,101],"lightsalmon":[255,160,122],"lightsalmon1":[255,160,122],"lightsalmon2":[238,149,114],"lightsalmon3":[205,129,98],"lightsalmon4":[139,87,66],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightskyblue1":[176,226,255],"lightskyblue2":[164,211,238],"lightskyblue3":[141,182,205],"lightskyblue4":[96,123,139],"lightslateblue":[132,112,255],"lightslategray":[119,136,153],"lightslategrey":"lightslategray","lightsteelblue":[176,196,222],"lightsteelblue1":[202,225,255],"lightsteelblue2":[188,210,238],"lightsteelblue3":[162,181,205],"lightsteelblue4":[110,123,139],"lightyellow":[255,255,224],"lightyellow1":[255,255,224],"lightyellow2":[238,238,209],"lightyellow3":[205,205,180],"lightyellow4":[139,139,122],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"magenta1":[255,0,255],"magenta2":[238,0,238],"magenta3":[205,0,205],"magenta4":[139,0,139],"maroon":[176,48,96],"maroon1":[255,52,179],"maroon2":[238,48,167],"maroon3":[205,41,144],"maroon4":[139,28,98],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumorchid1":[224,102,255],"mediumorchid2":[209,95,238],"mediumorchid3":[180,82,205],"mediumorchid4":[122,55,139],"mediumpurple":[147,112,219],"mediumpurple1":[171,130,255],"mediumpurple2":[159,121,238],"mediumpurple3":[137,104,205],"mediumpurple4":[93,71,139],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"mistyrose1":[255,228,225],"mistyrose2":[238,213,210],"mistyrose3":[205,183,181],"mistyrose4":[139,125,123],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navajowhite1":[255,222,173],"navajowhite2":[238,207,161],"navajowhite3":[205,179,139],"navajowhite4":[139,121,94],"navy":[0,0,128],"navyblue":[0,0,128],"oldlace":[253,245,230],"olivedrab":[107,142,35],"olivedrab1":[192,255,62],"olivedrab2":[179,238,58],"olivedrab3":[154,205,50],"olivedrab4":[105,139,34],"orange":[255,165,0],"orange1":[255,165,0],"orange2":[238,154,0],"orange3":[205,133,0],"orange4":[139,90,0],"orangered":[255,69,0],"orangered1":[255,69,0],"orangered2":[238,64,0],"orangered3":[205,55,0],"orangered4":[139,37,0],"orchid":[218,112,214],"orchid1":[255,131,250],"orchid2":[238,122,233],"orchid3":[205,105,201],"orchid4":[139,71,137],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"palegreen1":[154,255,154],"palegreen2":[144,238,144],"palegreen3":[124,205,124],"palegreen4":[84,139,84],"paleturquoise":[175,238,238],"paleturquoise1":[187,255,255],"paleturquoise2":[174,238,238],"paleturquoise3":[150,205,205],"paleturquoise4":[102,139,139],"palevioletred":[219,112,147],"palevioletred1":[255,130,171],"palevioletred2":[238,121,159],"palevioletred3":[205,104,137],"palevioletred4":[139,71,93],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peachpuff1":[255,218,185],"peachpuff2":[238,203,173],"peachpuff3":[205,175,149],"peachpuff4":[139,119,101],"peru":[205,133,63],"pink":[255,192,203],"pink1":[255,181,197],"pink2":[238,169,184],"pink3":[205,145,158],"pink4":[139,99,108],"plum":[221,160,221],"plum1":[255,187,255],"plum2":[238,174,238],"plum3":[205,150,205],"plum4":[139,102,139],"powderblue":[176,224,230],"purple":[160,32,240],"purple1":[155,48,255],"purple2":[145,44,238],"purple3":[125,38,205],"purple4":[85,26,139],"red":[255,0,0],"red1":[255,0,0],"red2":[238,0,0],"red3":[205,0,0],"red4":[139,0,0],"rosybrown":[188,143,143],"rosybrown1":[255,193,193],"rosybrown2":[238,180,180],"rosybrown3":[205,155,155],"rosybrown4":[139,105,105],"royalblue":[65,105,225],"royalblue1":[72,118,255],"royalblue2":[67,110,238],"royalblue3":[58,95,205],"royalblue4":[39,64,139],"saddlebrown":[139,69,19],"salmon":[250,128,114],"salmon1":[255,140,105],"salmon2":[238,130,98],"salmon3":[205,112,84],"salmon4":[139,76,57],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seagreen1":[84,255,159],"seagreen2":[78,238,148],"seagreen3":[67,205,128],"seagreen4":[46,139,87],"seashell":[255,245,238],"seashell1":[255,245,238],"seashell2":[238,229,222],"seashell3":[205,197,191],"seashell4":[139,134,130],"sienna":[160,82,45],"sienna1":[255,130,71],"sienna2":[238,121,66],"sienna3":[205,104,57],"sienna4":[139,71,38],"skyblue":[135,206,235],"skyblue1":[135,206,255],"skyblue2":[126,192,238],"skyblue3":[108,166,205],"skyblue4":[74,112,139],"slateblue":[106,90,205],"slateblue1":[131,111,255],"slateblue2":[122,103,238],"slateblue3":[105,89,205],"slateblue4":[71,60,139],"slategray":[112,128,144],"slategray1":[198,226,255],"slategray2":[185,211,238],"slategray3":[159,182,205],"slategray4":[108,123,139],"slategrey":"slategray","slategrey1":"slategray1","slategrey2":"slategray2","slategrey3":"slategray3","slategrey4":"slategray4","snow":[255,250,250],"snow1":[255,250,250],"snow2":[238,233,233],"snow3":[205,201,201],"snow4":[139,137,137],"springgreen":[0,255,127],"springgreen1":[0,255,127],"springgreen2":[0,238,118],"springgreen3":[0,205,102],"springgreen4":[0,139,69],"steelblue":[70,130,180],"steelblue1":[99,184,255],"steelblue2":[92,172,238],"steelblue3":[79,148,205],"steelblue4":[54,100,139],"tan":[210,180,140],"tan1":[255,165,79],"tan2":[238,154,73],"tan3":[205,133,63],"tan4":[139,90,43],"thistle":[216,191,216],"thistle1":[255,225,255],"thistle2":[238,210,238],"thistle3":[205,181,205],"thistle4":[139,123,139],"tomato":[255,99,71],"tomato1":[255,99,71],"tomato2":[238,92,66],"tomato3":[205,79,57],"tomato4":[139,54,38],"turquoise":[64,224,208],"turquoise1":[0,245,255],"turquoise2":[0,229,238],"turquoise3":[0,197,205],"turquoise4":[0,134,139],"violet":[238,130,238],"violetred":[208,32,144],"violetred1":[255,62,150],"violetred2":[238,58,140],"violetred3":[205,50,120],"violetred4":[139,34,82],"wheat":[245,222,179],"wheat1":[255,231,186],"wheat2":[238,216,174],"wheat3":[205,186,150],"wheat4":[139,126,102],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellow1":[255,255,0],"yellow2":[238,238,0],"yellow3":[205,205,0],"yellow4":[139,139,0],"yellowgreen":[154,205,50]},"fallbackColor":"white","info":["http://www.thomas-guettler.de/rgb.txt.html","http://www.astrouw.edu.pl/~jskowron/colors-x11/rgb.html","file://localhost/usr/X11/share/X11/rgb.txt"]}};jamColors.defineNamedColorsSet=function(setName,setData) {var setName=setName.replace(/\s/g,"").toLowerCase();if(setName in namedColorsSets) {throw new Error("[jamColors.defineNamedColorsSet] Named colors set already exists: "+setName);} else if(setData.constructor!==Object) {throw new Error("[jamColors.defineNamedColorsSet] JavaScript object expected");} else if(!(("colorClass"in setData)&&("colorNames"in setData))) {throw new Error("[jamColors.defineNamedColorsSet] Data syntax error");} else {namedColorsSets[setName]=setData;}};function getNamedColorsSet(setName) {var setName=setName.replace(/\s/g,"").toLowerCase();if(setName in namedColorsSets) {var namedColorsSet=namedColorsSets[setName];if(typeof namedColorsSet==='string') {namedColorsSet=namedColorsSets[namedColorsSet];}} else {throw new Error("[jamColors getNamedColorsSet] Unknown named colors set: "+setName);} return namedColorsSet;} jamColors.enumerateNamedColors=function(setName,excludeVariants) {var namedColorsSet=getNamedColorsSet(setName);var colorNames=namedColorsSet["colorNames"];var names=[];for(var colorName in colorNames) {if(colorNames.hasOwnProperty(colorName)) {if((!excludeVariants)||(typeof colorNames[colorName]!=='string')) {names.push(colorName);}}} return names;};jamColors.nameToColor=function(setName,colorName,strict) {var namedColorsSet=getNamedColorsSet(setName);var colorNames=namedColorsSet["colorNames"];var colorName=colorName.replace(/\s/g,"").toLowerCase();if(!(colorName in colorNames)) {if((!strict)&&("fallbackColor"in namedColorsSet)) {colorName=namedColorsSet["fallbackColor"];} else {throw new Error("[jamColors.nameToColor] Unknown color name: "+colorName);}} var colorComponents=colorNames[colorName];return[namedColorsSet["colorClass"],(typeof colorComponents==='string')?colorNames[colorComponents]:colorComponents];};jamColors.hexToRgb=function(hexColorString) {var result=hexColorString.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/);if(result) {var rgb=result[1];if(rgb.length===3) {rgb=rgb[0]+rgb[0]+rgb[1]+rgb[1]+rgb[2]+rgb[2];} var color=[parseInt(rgb.slice(0,2),16),parseInt(rgb.slice(2,4),16),parseInt(rgb.slice(4,6),16)];} else {throw new Error("[jamColors.hexToRgb] Invalid HTML/CSS hexadecimal string: "+hexColorString);} return color;};jamColors.rgbToHex=function(rgbColor,noSign,lowercase) {if((rgbColor.constructor===Array)&&(rgbColor.length===3)) {var red=Math.round(rgbColor[0]);var green=Math.round(rgbColor[1]);var blue=Math.round(rgbColor[2]);var hexaDigits=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];var hexColorString=(noSign)?"":"#";hexColorString+=hexaDigits[(red&0xF0)>>4]+hexaDigits[red&0x0F];hexColorString+=hexaDigits[(green&0xF0)>>4]+hexaDigits[green&0x0F];hexColorString+=hexaDigits[(blue&0xF0)>>4]+hexaDigits[blue&0x0F];if(lowercase) {hexColorString=hexColorString.toLowerCase();}} else {throw new Error("[jamColors.rgbToHex] Invalid RGB color array");} return hexColorString;};jamColors.colorToRgb=function(color) {var rgb=null;if(typeof color==='string') {color=color.trim();if(color[0]==='#') {rgb=this.hexToRgb(color);} else {var defaultSetName="W3C";var names=color.split(/[:\/]/);var setName;var colorName;if(names.length>1) {setName=names[0]||defaultSetName;colorName=names[1];} else {setName=defaultSetName;colorName=names[0];} color=this.nameToColor(setName,colorName,true);if(color[0]==="RGBColor") {rgb=color[1];} else {throw new Error("[jamColors.colorToRgb] Unsupported named color set name: "+setName);}}} else if((color.constructor===Array)&&(color.length===3)) {rgb=color;} else {throw new Error("[jamColors.colorToRgb] Invalid syntax");} return rgb;} function limit(value,min,max) {return Math.min(Math.max(min,value),max);} jamColors.hsbToRgb=function(hsbColor,hsbFloatRange,rgbFloatRange) {var hue=hsbColor[0];var saturation=hsbColor[1];var brightness=hsbColor[2];if(!hsbFloatRange) {hue/=360;saturation/=100;brightness/=100;} hue-=Math.floor(hue);saturation=limit(saturation,0.0,1.0);brightness=limit(brightness,0.0,1.0);var red;var green;var blue;var i=Math.floor(hue*6);var f=(hue*6)-i;var p=brightness*(1-saturation);var q=brightness*(1-(f*saturation));var t=brightness*(1-((1-f)*saturation));switch(i%6) {case 0:red=brightness;green=t;blue=p;break;case 1:red=q;green=brightness;blue=p;break;case 2:red=p;green=brightness;blue=t;break;case 3:red=p;green=q;blue=brightness;break;case 4:red=t;green=p;blue=brightness;break;case 5:red=brightness;green=p;blue=q;break;} if(!rgbFloatRange) {red*=255;green*=255;blue*=255;} return[red,green,blue];};jamColors.rgbToHsb=function(rgbColor,rgbFloatRange,hsbFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(!rgbFloatRange) {red/=255;green/=255;blue/=255;} red=limit(red,0.0,1.0);green=limit(green,0.0,1.0);blue=limit(blue,0.0,1.0);var min=Math.min(Math.min(red,green),blue);var max=Math.max(Math.max(red,green),blue);var delta=max-min;var hue=0;var saturation=0;var brightness=max;if(delta!==0) {saturation=delta/max;if(max===red) {hue=(0+((green-blue)/delta))/6;} else if(max===green) {hue=(2+((blue-red)/delta))/6;} else if(max===blue) {hue=(4+((red-green)/delta))/6;} if(hue<0) {hue+=1;} if(hue>1) {hue-=1;}} if(!hsbFloatRange) {hue*=360;saturation*=100;brightness*=100;} return[hue,saturation,brightness];};jamColors.hslToRgb=function(hslColor,hslFloatRange,rgbFloatRange) {var hue=hslColor[0];var saturation=hslColor[1];var lightness=hslColor[2];if(!hslFloatRange) {hue/=360;saturation/=100;lightness/=100;} hue-=Math.floor(hue);saturation=limit(saturation,0.0,1.0);lightness=limit(lightness,0.0,1.0);var red;var green;var blue;if(saturation===0) {red=green=blue=lightness;} else {function hue2rgb(p,q,t) {if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+((q-p)*t*6);if(t<1/2)return q;if(t<2/3)return p+((q-p)*(2/3-t)*6);return p;} var q=(lightness<0.5)?lightness*(1+saturation):lightness+saturation-(lightness*saturation);var p=(2*lightness)-q;red=hue2rgb(p,q,hue+1/3);green=hue2rgb(p,q,hue);blue=hue2rgb(p,q,hue-1/3);} if(!rgbFloatRange) {red*=255;green*=255;blue*=255;} return[red,green,blue];};jamColors.rgbToHsl=function(rgbColor,rgbFloatRange,hslFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(!rgbFloatRange) {red/=255;green/=255;blue/=255;} red=limit(red,0.0,1.0);green=limit(green,0.0,1.0);blue=limit(blue,0.0,1.0);var min=Math.min(Math.min(red,green),blue);var max=Math.max(Math.max(red,green),blue);var delta=max-min;var hue=0;var saturation=0;var lightness=(max+min)/2;if(delta!==0) {saturation=(lightness<0.5)?delta/(max+min):delta/(2-(max+min));if(max===red) {hue=(0+((green-blue)/delta))/6;} else if(max===green) {hue=(2+((blue-red)/delta))/6;} else if(max===blue) {hue=(4+((red-green)/delta))/6;} if(hue<0) {hue+=1;} if(hue>1) {hue-=1;}} if(!hslFloatRange) {hue*=360;saturation*=100;lightness*=100;} return[hue,saturation,lightness];};var whiteReference=[95.047,100.000,108.883];var t0=4/29;var t1=6/29;var t2=3*t1*t1;var t3=t1*t1*t1;function rgbToXyz(rgbColor) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];red/=255;green/=255;blue/=255;function inverseGamma(n) {return(n>0.04045)?Math.pow((n+0.055)/1.055,2.4):n/12.92;} red=inverseGamma(red);green=inverseGamma(green);blue=inverseGamma(blue);var x=(red*0.4124564)+(green*0.3575761)+(blue*0.1804375);var y=(red*0.2126729)+(green*0.7151522)+(blue*0.0721750);var z=(red*0.0193339)+(green*0.1191920)+(blue*0.9503041);x*=100;y*=100;z*=100;return[x,y,z];} function xyzToRgb(xyzColor) {var x=xyzColor[0];var y=xyzColor[1];var z=xyzColor[2];x/=100;y/=100;z/=100;function gamma(n) {return(n>0.0031308)?1.055*Math.pow(n,1/2.4)-0.055:12.92*n;} var red=gamma((3.2404542*x)+(-1.5371385*y)+(-0.4985314*z));var green=gamma((-0.9692660*x)+(1.8760108*y)+(0.0415560*z));var blue=gamma((0.0556434*x)+(-0.2040259*y)+(1.0572252*z));red*=255;green*=255;blue*=255;return[red,green,blue];} function xyzToLab(xyzColor) {var x=xyzColor[0]/whiteReference[0];var y=xyzColor[1]/whiteReference[1];var z=xyzColor[2]/whiteReference[2];function pivot(t) {return(t>t3)?Math.pow(t,1/3):(t/t2)+t0;} x=pivot(x);y=pivot(y);z=pivot(z);var luminance=(116*y)-16;var a=500*(x-y);var b=200*(y-z);return[luminance,a,b];} function labToXyz(labColor) {var luminance=labColor[0];var a=labColor[1];var b=labColor[2];var y=(luminance+16)/116;var x=y+(a/500);var z=y-(b/200);function inversePivot(t) {return(t>t1)?t*t*t:(t-t0)*t2;} x=inversePivot(x)*whiteReference[0];y=inversePivot(y)*whiteReference[1];z=inversePivot(z)*whiteReference[2];return[x,y,z];} function labToHcl(labColor) {var luminance=labColor[0];var a=labColor[1];var b=labColor[2];var hue=Math.atan2(b,a);if(hue<0) {hue+=2*Math.PI;} hue*=180/Math.PI;var chroma=Math.sqrt((a*a)+(b*b));return[hue,chroma,luminance];} function hclToLab(hclColor) {var hue=hclColor[0];var chroma=hclColor[1];var luminance=hclColor[2];var a=Math.cos(hue*Math.PI/180)*chroma;var b=Math.sin(hue*Math.PI/180)*chroma;return[luminance,a,b];} jamColors.xyzToRgb=function(xyzColor,xyzFloatRange,rgbFloatRange) {var x=xyzColor[0];var y=xyzColor[1];var z=xyzColor[2];if(xyzFloatRange) {x*=100;y*=100;z*=100;} var rgbColor=xyzToRgb([x,y,z]);var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red/=255;green/=255;blue/=255;} return[red,green,blue];};jamColors.rgbToXyz=function(rgbColor,rgbFloatRange,xyzFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red*=255;green*=255;blue*=255;} var xyzColor=rgbToXyz([red,green,blue]);var x=xyzColor[0];var y=xyzColor[1];var z=xyzColor[2];if(xyzFloatRange) {x/=100;y/=100;z/=100;} return[x,y,z];};jamColors.labToRgb=function(labColor,labFloatRange,rgbFloatRange) {var luminance=labColor[0];var a=labColor[1];var b=labColor[2];if(labFloatRange) {luminance*=100;a*=256;a-=128;b*=256;b-=128;} var rgbColor=xyzToRgb(labToXyz([luminance,a,b]));var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red/=255;green/=255;blue/=255;} return[red,green,blue];};jamColors.rgbToLab=function(rgbColor,rgbFloatRange,labFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red*=255;green*=255;blue*=255;} var labColor=xyzToLab(rgbToXyz([red,green,blue]));var luminance=labColor[0];var a=labColor[1];var b=labColor[2];if(labFloatRange) {luminance/=100;a+=128;a/=256;b+=128;b/=256;} return[luminance,a,b];};jamColors.hclToRgb=function(hclColor,hclFloatRange,rgbFloatRange) {var hue=hclColor[0];var chroma=hclColor[1];var luminance=hclColor[2];if(hclFloatRange) {hue*=360;chroma*=128;luminance*=100;} var rgbColor=xyzToRgb(labToXyz(hclToLab([hue,chroma,luminance])));var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red/=255;green/=255;blue/=255;} return[red,green,blue];};jamColors.rgbToHcl=function(rgbColor,rgbFloatRange,hclFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red*=255;green*=255;blue*=255;} var hclColor=labToHcl(xyzToLab(rgbToXyz([red,green,blue])));var hue=hclColor[0];var chroma=hclColor[1];var luminance=hclColor[2];if(hclFloatRange) {hue/=360;chroma/=128;luminance/=100;} return[hue,chroma,luminance];};jamColors.ycbcrToRgb=function(ycbcrColor,ycbcrFloatRange,rgbFloatRange) {var y=ycbcrColor[0];var cb=ycbcrColor[1];var cr=ycbcrColor[2];if(ycbcrFloatRange) {y*=255;cb*=255;cr*=255;} var red=y+(1.402*(cr-128));var green=y-(0.34414*(cb-128))-(0.71414*(cr-128));var blue=y+(1.772*(cb-128));if(rgbFloatRange) {red/=255;green/=255;blue/=255;} return[red,green,blue];};jamColors.rgbToYcbcr=function(rgbColor,rgbFloatRange,ycbcrFloatRange) {var red=rgbColor[0];var green=rgbColor[1];var blue=rgbColor[2];if(rgbFloatRange) {red*=255;green*=255;blue*=255;} var y=0+(0.299*red)+(0.587*green)+(0.114*blue);var cb=128-(0.168736*red)-(0.331264*green)+(0.5*blue);var cr=128+(0.5*red)-(0.418688*green)-(0.081312*blue);if(ycbcrFloatRange) {y/=255;cb/=255;cr/=255;} return[y,cb,cr];};}());}
if(typeof jamEngine!=='object') {var jamEngine={};(function() {var that;jamEngine.meaningfulIds=false;jamEngine.parseFriendly=false;jamEngine.displayDialogs=DialogModes.ERROR;var conflictingStringIdStrs={"'Algn'":["align","alignment"],"'AntA'":["antiAlias","antiAliasedPICTAcquire"],"'BckL'":["backgroundLayer","backgroundLevel"],"'BlcG'":["blackGenerationType","blackGenerationCurve"],"'BlcL'":["blackLevel","blackLimit"],"'Blks'":["blacks","blocks"],"'BlrM'":["blurMethod","blurMore"],"'BrgC'":["brightnessEvent","brightnessContrast"],"'BrsD'":["brushDetail","brushesDefine"],"'Brsh'":["brush","brushes"],"'Clcl'":["calculation","calculations"],"'ClrP'":["colorPalette","coloredPencil"],"'Cnst'":["constant","constrain"],"'CntC'":["centerCropMarks","conteCrayon"],"'Cntr'":["center","contrast"],"'CrtD'":["createDroplet","createDuplicate"],"'CstP'":["customPalette","customPhosphors"],"'Cstm'":["custom","customPattern"],"'Drkn'":["darken","darkness"],"'Dstr'":["distort","distortion","distribute","distribution"],"'Dstt'":["desaturate","destWhiteMax"],"'FlIn'":["fileInfo","fillInverse"],"'Gd  '":["good","guide"],"'GnrP'":["generalPreferences","generalPrefs","preferencesClass"],"'GrSt'":["grainStippled","graySetup"],"'Grdn'":["gradientClassEvent","gridMinor"],"'Grn '":["grain","green"],"'Grns'":["graininess","greens"],"'HstP'":["historyPreferences","historyPrefs"],"'HstS'":["historyState","historyStateSourceType"],"'ImgP'":["imageCachePreferences","imagePoint"],"'In  '":["in","stampIn"],"'IntW'":["interfaceWhite","intersectWith"],"'Intr'":["interfaceIconFrameDimmed","interlace","interpolation","intersect"],"'JPEG'":["JPEG","JPEGFormat"],"'LghD'":["lightDirection","lightDirectional"],"'LghO'":["lightOmni","lightenOnly"],"'LghS'":["lightSource","lightSpot"],"'Lns '":["lens","lines"],"'Mgnt'":["magenta","magentas"],"'MrgL'":["mergeLayers","mergedLayers"],"'Mxm '":["maximum","maximumQuality"],"'NTSC'":["NTSC","NTSCColors"],"'NmbL'":["numberOfLayers","numberOfLevels"],"'PlgP'":["pluginPicker","pluginPrefs"],"'Pncl'":["pencilEraser","pencilWidth"],"'Pnt '":["paint","point"],"'Prsp'":["perspective","perspectiveIndex"],"'PrvM'":["previewMacThumbnail","previewMagenta"],"'Pstr'":["posterization","posterize"],"'RGBS'":["RGBSetup","RGBSetupSource"],"'Rds '":["radius","reds"],"'ScrD'":["scratchDisks","screenDot"],"'ShdI'":["shadingIntensity","shadowIntensity"],"'ShpC'":["shapeCurveType","shapingCurve"],"'ShrE'":["sharpenEdges","shearEd"],"'Shrp'":["sharpen","sharpness"],"'SplC'":["splitChannels","supplementalCategories"],"'Spot'":["spot","spotColor"],"'SprS'":["separationSetup","sprayedStrokes"],"'StrL'":["strokeLength","strokeLocation"],"'Strt'":["saturation","start"],"'TEXT'":["char","textType"],"'TIFF'":["TIFF","TIFFFormat"],"'TglO'":["toggleOptionsPalette","toggleOthers"],"'TrnG'":["transparencyGamutPreferences","transparencyGrid","transparencyGridSize"],"'TrnS'":["transferSpec","transparencyShape","transparencyStop"],"'Trns'":["transparency","transparent"],"'TxtC'":["textClickPoint","textureCoverage"],"'TxtF'":["textureFile","textureFill"],"'UsrM'":["userMaskEnabled","userMaskOptions"],"'c@#^'":["inherits","pInherits"],"'comp'":["comp","sInt64"],"'doub'":["floatType","IEEE64BitFloatingPoint","longFloat"],"'long'":["integer","longInteger","sInt32"],"'magn'":["magnitude","uInt32"],"'null'":["null","target"],"'shor'":["sInt16","sMInt","shortInteger"],"'sing'":["IEEE32BitFloatingPoint","sMFloat","shortFloat"]};jamEngine.getConflictingStringIdStrs=function(charIdStr) {return conflictingStringIdStrs[charIdStr]||null;};jamEngine.uniIdStrToId=function(uniIdStr) {var id=0;if(typeof uniIdStr==='string') {if((uniIdStr.length===(1+4+1))&&(uniIdStr.charAt(0)==="'")&&(uniIdStr.charAt(5)==="'")) {id=app.charIDToTypeID(uniIdStr.substring(1,5));} else {id=app.stringIDToTypeID(uniIdStr);}} return id;};var smallestHashValue=app.charIDToTypeID("    ");jamEngine.idToUniIdStrs=function(id) {var charIdStr="";var stringIdStr=app.typeIDToStringID(id);if(id>=smallestHashValue) {charIdStr="'"+app.typeIDToCharID(id)+"'";if(stringIdStr!=="") {if(charIdStr in conflictingStringIdStrs) {stringIdStr=conflictingStringIdStrs[charIdStr];}}} return[charIdStr,stringIdStr];};jamEngine.equivalentUniIdStrs=function(uniIdStr1,uniIdStr2) {return this.uniIdStrToId(uniIdStr1)===this.uniIdStrToId(uniIdStr2);};function putInReference(ref,containers) {if(containers.constructor===Array) {var count=containers.length;for(var i=0;i<count;i++) {var container=that.parseCompact(containers[i]);var desiredClassId=that.uniIdStrToId(container[0]);var typedValue=that.parseCompact(container[1]);var form=typedValue[0];var value=typedValue[1];switch(form) {case"<class>":ref.putClass(desiredClassId);break;case"<enumerated>":var enumerated=that.parseCompact(value);ref.putEnumerated(desiredClassId,that.uniIdStrToId(enumerated[0]),that.uniIdStrToId(enumerated[1]));break;case"<identifier>":ref.putIdentifier(desiredClassId,value);break;case"<index>":ref.putIndex(desiredClassId,value);break;case"<name>":ref.putName(desiredClassId,value);break;case"<offset>":ref.putOffset(desiredClassId,value);break;case"<property>":ref.putProperty(desiredClassId,that.uniIdStrToId(value));break;default:throw new Error("[jamEngine putInReference] Unknown reference form: "+form);break;}}} else {throw new Error("[jamEngine putInReference] JavaScript array expected");}} function putInList(list,items) {if(items.constructor===Array) {var count=items.length;for(var i=0;i<count;i++) {var item=that.parseCompact(items[i]);var type=item[0];var value=item[1];switch(type) {case"<boolean>":list.putBoolean(value);break;case"<class>":list.putClass(that.uniIdStrToId(value));break;case"<data>":list.putData(value);break;case"<double>":list.putDouble(value);break;case"<enumerated>":var enumerated=that.parseCompact(value);list.putEnumerated(that.uniIdStrToId(enumerated[0]),that.uniIdStrToId(enumerated[1]));break;case"<integer>":list.putInteger(value);break;case"<largeInteger>":list.putLargeInteger(value);break;case"<list>":var actionList=new ActionList();putInList(actionList,value);list.putList(actionList);break;case"<object>":var object=that.parseCompact(value);if(object[1]) {var actionDescriptor=new ActionDescriptor();putInDescriptor(actionDescriptor,object[1]);list.putObject(that.uniIdStrToId(object[0]),actionDescriptor);} else {list.putClass(that.uniIdStrToId(object[0]));} break;case"<path>":var fileRef=new File(value);list.putPath(fileRef);break;case"<reference>":var actionReference=new ActionReference();putInReference(actionReference,value);list.putReference(actionReference);break;case"<string>":list.putString(value);break;case"<unitDouble>":var unitDouble=that.parseCompact(value);list.putUnitDouble(that.uniIdStrToId(unitDouble[0]),unitDouble[1]);break;default:throw new Error("[jamEngine putInList] Unknown list type: "+type);break;}}} else {throw new Error("[jamEngine putInList] JavaScript array expected");}} function putInDescriptor(desc,members) {if(members.constructor===Object) {for(var key in members) {if(members.hasOwnProperty(key)) {var keyID=that.uniIdStrToId(key);var member=that.parseCompact(members[key]);var type=member[0];var value=member[1];switch(type) {case"<boolean>":desc.putBoolean(keyID,value);break;case"<class>":desc.putClass(keyID,that.uniIdStrToId(value));break;case"<data>":desc.putData(keyID,value);break;case"<double>":desc.putDouble(keyID,value);break;case"<enumerated>":var enumerated=that.parseCompact(value);desc.putEnumerated(keyID,that.uniIdStrToId(enumerated[0]),that.uniIdStrToId(enumerated[1]));break;case"<integer>":desc.putInteger(keyID,value);break;case"<largeInteger>":desc.putLargeInteger(keyID,value);break;case"<list>":var actionList=new ActionList();putInList(actionList,value);desc.putList(keyID,actionList);break;case"<object>":var object=that.parseCompact(value);if(object[1]) {var actionDescriptor=new ActionDescriptor();putInDescriptor(actionDescriptor,object[1]);desc.putObject(keyID,that.uniIdStrToId(object[0]),actionDescriptor);} else {desc.putClass(keyID,that.uniIdStrToId(object[0]));} break;case"<path>":var fileRef=new File(value);desc.putPath(keyID,fileRef);break;case"<reference>":var actionReference=new ActionReference();putInReference(actionReference,value);desc.putReference(keyID,actionReference);break;case"<string>":desc.putString(keyID,value);break;case"<unitDouble>":var unitDouble=that.parseCompact(value);desc.putUnitDouble(keyID,that.uniIdStrToId(unitDouble[0]),unitDouble[1]);break;default:throw new Error("[jamEngine putInDescriptor] Unknown descriptor type: "+type);break;}}}} else {throw new Error("[jamEngine putInDescriptor] JavaScript object expected");}} var contextRules={"'Algn'":{"<classKey>":{"bevelEmboss":"align","frameFX":"align","gradientFill":"align","gradientLayer":"align","patternFill":"align","patternLayer":"align"},"<event>":"align","<key>":"alignment"},"'AntA'":{"<class>":"antiAliasedPICTAcquire","<key>":"antiAlias"},"'BckL'":{"<class>":"backgroundLayer","<key>":"backgroundLevel"},"'BlcG'":{"<enumType>":"blackGenerationType","<key>":"blackGenerationCurve"},"'BlcL'":{"<classKey>":{"'GEfc'":"blackLevel","CMYKSetup":"blackLimit"},"<eventKey>":{"reticulation":"blackLevel"}},"'Blks'":{"<typeValue>":{"colors":"blacks","extrudeType":"blocks"}},"'BlrM'":{"<enumType>":"blurMethod","<event>":"blurMore","<key>":"blurMethod"},"'BrgC'":{"<class>":"brightnessContrast","<event>":"brightnessContrast"},"'BrsD'":{"<enumValue>":"brushesDefine","<key>":"brushDetail"},"'Brsh'":{"<class>":"brush","<classKey>":{"brushPreset":"brush","currentToolOptions":"brush","displayPrefs":"brush"},"<key>":"brushes"},"'Clcl'":{"<class>":"calculation","<enumValue>":"calculations","<key>":"calculation"},"'ClrP'":{"<typeValue>":{"'GEft'":"coloredPencil"},"<enumType>":"colorPalette","<event>":"coloredPencil"},"'Cnst'":{"<classKey>":{"channelMatrix":"constant"},"<unknown>":"constrain"},"'CntC'":{"<typeValue>":{"'GEft'":"conteCrayon"},"<event>":"conteCrayon","<key>":"centerCropMarks"},"'Cntr'":{"<classKey>":{"'GEfc'":"contrast","brightnessContrast":"contrast","document":"center","polygon":"center","quadrilateral":"center"},"<eventKey>":{"adaptCorrect":"contrast","brightnessEvent":"contrast","grain":"contrast","halftoneScreen":"contrast","sumie":"contrast","tornEdges":"contrast","waterPaper":"contrast"},"<enumValue>":"center"},"'CrtD'":{"<enumValue>":"createDuplicate","<event>":"createDroplet"},"'CstP'":{"<class>":"customPhosphors","<key>":"customPalette"},"'Cstm'":{"<enumValue>":"customPattern","<event>":"custom","<key>":"custom"},"'Drkn'":{"<enumValue>":"darken","<key>":"darkness"},"'Dstr'":{"<classKey>":{"'GEfc'":"distortion"},"<eventKey>":{"glass":"distortion","addNoise":"distribution"},"<enumType>":"distribution","<enumValue>":"distort","<event>":"distribute"},"'Dstt'":{"<enumValue>":"desaturate","<event>":"desaturate","<key>":"destWhiteMax"},"'FlIn'":{"<typeValue>":{"fillColor":"fillInverse","menuItemType":"fileInfo"},"<class>":"fileInfo","<key>":"fileInfo"},"'Gd  '":{"<class>":"guide","<enumValue>":"good"},"'GnrP'":{"<class>":"preferencesClass","<enumValue>":"generalPreferences","<key>":"generalPrefs"},"'GrSt'":{"<class>":"graySetup","<enumValue>":"grainStippled","<key>":"graySetup"},"'Grdn'":{"<class>":"gradientClassEvent","<event>":"gradientClassEvent","<key>":"gridMinor"},"'Grn '":{"<typeValue>":{"'GEft'":"grain"},"<classKey>":{"'GEfc'":"grain","RGBColor":"green","blackAndWhite":"green","channelMatrix":"green","channelMixer":"green"},"<eventKey>":{"blackAndWhite":"green","channelMixer":"green","filmGrain":"grain"},"<enumValue>":"green","<event>":"grain"},"'Grns'":{"<enumValue>":"greens","<key>":"graininess"},"'HstP'":{"<enumValue>":"historyPreferences","<key>":"historyPrefs"},"'HstS'":{"<class>":"historyState","<enumType>":"historyStateSourceType"},"'ImgP'":{"<class>":"imagePoint","<enumValue>":"imageCachePreferences"},"'In  '":{"<enumValue>":"stampIn","<key>":"in"},"'IntW'":{"<event>":"intersectWith","<key>":"interfaceWhite"},"'Intr'":{"<typeValue>":{"shapeOperation":"intersect"},"<classKey>":{"GIFFormat":"interlace","SaveForWeb":"interlace","application":"interfaceIconFrameDimmed","computedBrush":"interpolation","dBrush":"interpolation","gradientClassEvent":"interpolation","photoshopEPSFormat":"interpolation","sampledBrush":"interpolation"},"<eventKey>":{"convertMode":"interpolation","imageSize":"interpolation","transform":"interpolation"},"<event>":"intersect"},"'JPEG'":{"<class>":"JPEGFormat","<enumValue>":"JPEG"},"'LghD'":{"<enumType>":"lightDirection","<enumValue>":"lightDirectional","<key>":"lightDirection"},"'LghO'":{"<typeValue>":{"diffuseMode":"lightenOnly","lightType":"lightOmni"}},"'LghS'":{"<class>":"lightSource","<enumValue>":"lightSpot","<key>":"lightSource"},"'Lns '":{"<enumType>":"lens","<enumValue>":"lines","<key>":"lens"},"'Mgnt'":{"<typeValue>":{"channel":"magenta","colors":"magentas","guideGridColor":"magenta"},"<key>":"magenta"},"'MrgL'":{"<enumValue>":"mergedLayers","<event>":"mergeLayers"},"'Mxm '":{"<enumValue>":"maximumQuality","<event>":"maximum","<key>":"maximum"},"'NTSC'":{"<enumValue>":"NTSC","<event>":"NTSCColors"},"'NmbL'":{"<classKey>":{"'GEfc'":"numberOfLevels","document":"numberOfLayers"},"<eventKey>":{"cutout":"numberOfLevels"}},"'PlgP'":{"<class>":"pluginPrefs","<enumValue>":"pluginPicker","<key>":"pluginPrefs"},"'Pncl'":{"<enumValue>":"pencilEraser","<key>":"pencilWidth"},"'Pnt '":{"<typeValue>":{"textType":"point"},"<class>":"point","<event>":"paint"},"'Prsp'":{"<enumValue>":"perspective","<key>":"perspectiveIndex"},"'PrvM'":{"<enumValue>":"previewMagenta","<key>":"previewMacThumbnail"},"'Pstr'":{"<class>":"posterize","<event>":"posterize","<key>":"posterization"},"'RGBS'":{"<enumType>":"RGBSetupSource","<key>":"RGBSetup"},"'Rds '":{"<enumValue>":"reds","<key>":"radius"},"'ScrD'":{"<enumValue>":"screenDot","<key>":"scratchDisks"},"'ShdI'":{"<classKey>":{"'GEfc'":"shadowIntensity"},"<eventKey>":{"watercolor":"shadowIntensity"},"<unknown>":"shadingIntensity"},"'ShpC'":{"<classKey>":{"application":"shapingCurve"},"<class>":"shapingCurve","<key>":"shapeCurveType"},"'ShrE'":{"<event>":"sharpenEdges","<key>":"shearEd"},"'Shrp'":{"<event>":"sharpen","<key>":"sharpness"},"'SplC'":{"<event>":"splitChannels","<key>":"supplementalCategories"},"'Spot'":{"<enumValue>":"spotColor","<key>":"spot"},"'SprS'":{"<typeValue>":{"'GEft'":"sprayedStrokes"},"<enumValue>":"separationSetup","<event>":"sprayedStrokes"},"'StrL'":{"<enumType>":"strokeLocation","<key>":"strokeLength"},"'Strt'":{"<classKey>":{"currentToolOptions":"saturation","fileNamingRules":"start","HSBColorClass":"saturation","hueSatAdjustment":"saturation","hueSatAdjustmentV2":"saturation","lineClass":"start","range":"start","vibrance":"saturation"},"<eventKey>":{"replaceColor":"saturation","variations":"saturation","vibrance":"saturation"},"<enumValue>":"saturation"},"'TEXT'":{"<enumType>":"textType","<key>":"textType"},"'TIFF'":{"<class>":"TIFFFormat","<enumValue>":"TIFF"},"'TglO'":{"<enumValue>":"toggleOptionsPalette","<key>":"toggleOthers"},"'TrnG'":{"<classKey>":{"application":"transparencyGrid","transparencyPrefs":"transparencyGridSize"},"<enumType>":"transparencyGridSize","<enumValue>":"transparencyGamutPreferences"},"'TrnS'":{"<classKey>":{"bevelEmboss":"transparencyShape","dropShadow":"transparencyShape","innerGlow":"transparencyShape","innerShadow":"transparencyShape","outerGlow":"transparencyShape"},"<class>":"transparencyStop","<unknown>":"transferSpec"},"'Trns'":{"<enumValue>":"transparent","<key>":"transparency"},"'TxtC'":{"<classKey>":{"'GEfc'":"textureCoverage","textLayer":"textClickPoint"},"<eventKey>":{"underpainting":"textureCoverage"}},"'TxtF'":{"<event>":"textureFill","<key>":"textureFile"},"'UsrM'":{"<enumType>":"userMaskOptions","<key>":"userMaskEnabled"},"'null'":{"<class>":"null","<enumValue>":"null","<event>":"null","<key>":"target"}};function getFromId(context,parentContext) {var uniIdStr;var kind=context[0];var id=context[1];if(id<smallestHashValue) {uniIdStr=app.typeIDToStringID(id);} else {uniIdStr="'"+app.typeIDToCharID(id)+"'";if(that.meaningfulIds) {if(uniIdStr in contextRules) {function resolveIdStr(candidates) {var idStr="";for(var parentString in candidates) {if(candidates.hasOwnProperty(parentString)) {if(parentContext[1]===that.uniIdStrToId(parentString)) {idStr=candidates[parentString];break;}}} return idStr;} var resolvedIdStr="";var rule=contextRules[uniIdStr];if(parentContext) {switch(kind) {case"<key>":if((parentContext[0]==="<class>")&&("<classKey>"in rule)) {resolvedIdStr=resolveIdStr(rule["<classKey>"]);} else if((parentContext[0]==="<event>")&&("<eventKey>"in rule)) {resolvedIdStr=resolveIdStr(rule["<eventKey>"]);} break;case"<enumValue>":if((parentContext[0]==="<enumType>")&&("<typeValue>"in rule)) {resolvedIdStr=resolveIdStr(rule["<typeValue>"]);} break;}} if(resolvedIdStr!=="") {uniIdStr=resolvedIdStr;} else if(kind in rule) {uniIdStr=rule[kind];}} else {var stringIDStr=app.typeIDToStringID(id);if(stringIDStr!=="") {uniIdStr=stringIDStr;}}}} return uniIdStr;} var incompatiblePlatformPath="";var getEventId=app.stringIDToTypeID("get");var targetKeyId=app.stringIDToTypeID("target");var propertyClassId=app.stringIDToTypeID("property");function getFromReference(ref) {var propertyId=0;var arr=[];do {try{var desiredClassId=ref.getDesiredClass();}catch(e){break;} if(propertyId!==0) {var propertyCompact=that.buildCompact("<property>",getFromId(["<key>",propertyId],["<class>",desiredClassId]));arr.push(that.buildCompact(getFromId(["<class>",propertyClassId]),propertyCompact));propertyId=0;} var desiredCompact;var aFormID=ref.getForm();switch(aFormID) {case ReferenceFormType.CLASSTYPE:desiredCompact=that.buildCompact("<class>",null);break;case ReferenceFormType.ENUMERATED:var enumTypeContext=["<enumType>",ref.getEnumeratedType()];var enumValueContext=["<enumValue>",ref.getEnumeratedValue()];desiredCompact=that.buildCompact("<enumerated>",that.buildCompact(getFromId(enumTypeContext),getFromId(enumValueContext,enumTypeContext)));break;case ReferenceFormType.IDENTIFIER:desiredCompact=that.buildCompact("<identifier>",ref.getIdentifier());break;case ReferenceFormType.INDEX:desiredCompact=that.buildCompact("<index>",ref.getIndex());break;case ReferenceFormType.NAME:desiredCompact=that.buildCompact("<name>",ref.getName());break;case ReferenceFormType.OFFSET:desiredCompact=that.buildCompact("<offset>",ref.getOffset());break;case ReferenceFormType.PROPERTY:if(desiredClassId===propertyClassId) {propertyId=ref.getProperty();} else {desiredCompact=that.buildCompact("<property>",getFromId(["<key>",ref.getProperty()],["<class>",desiredClassId]));} break;default:throw new Error("[jamEngine getFromReference] Unknown reference form type: "+aFormID);break;} if(desiredClassId!==propertyClassId) {arr.push(that.buildCompact(getFromId(["<class>",desiredClassId]),desiredCompact));} ref=ref.getContainer();} while(ref);return arr;} function getFromList(list) {var arr=[];var itemCount=list.count;for(var itemIndex=0;itemIndex<itemCount;itemIndex++) {var itemCompact;var typeID;try{typeID=list.getType(itemIndex);}catch(e){continue;} switch(typeID) {case DescValueType.BOOLEANTYPE:itemCompact=that.buildCompact("<boolean>",list.getBoolean(itemIndex));break;case DescValueType.CLASSTYPE:itemCompact=that.buildCompact("<class>",getFromId(["<class>",list.getClass(itemIndex)]));break;case DescValueType.DOUBLETYPE:itemCompact=that.buildCompact("<double>",list.getDouble(itemIndex));break;case DescValueType.ENUMERATEDTYPE:var enumTypeContext=["<enumType>",list.getEnumerationType(itemIndex)];var enumValueContext=["<enumValue>",list.getEnumerationValue(itemIndex)];itemCompact=that.buildCompact("<enumerated>",that.buildCompact(getFromId(enumTypeContext),getFromId(enumValueContext,enumTypeContext)));break;case DescValueType.INTEGERTYPE:itemCompact=that.buildCompact("<integer>",list.getInteger(itemIndex));break;case DescValueType.LISTTYPE:itemCompact=that.buildCompact("<list>",getFromList(list.getList(itemIndex)));break;case DescValueType.OBJECTTYPE:var objectTypeContext=["<class>",list.getObjectType(itemIndex)];var objectValue=list.getObjectValue(itemIndex);itemCompact=that.buildCompact("<object>",that.buildCompact(getFromId(objectTypeContext),getFromDescriptor(objectValue,objectTypeContext)));break;case DescValueType.ALIASTYPE:try {var fileRef=list.getPath(itemIndex);itemCompact=that.buildCompact("<path>",fileRef.fsName);} catch(e) {itemCompact=that.buildCompact("<path>",incompatiblePlatformPath);} break;case DescValueType.REFERENCETYPE:itemCompact=that.buildCompact("<reference>",getFromReference(list.getReference(itemIndex)));break;case DescValueType.STRINGTYPE:itemCompact=that.buildCompact("<string>",list.getString(itemIndex));break;case DescValueType.UNITDOUBLE:var unitTypeContext=["<unit>",list.getUnitDoubleType(itemIndex)];var doubleValue=list.getUnitDoubleValue(itemIndex);itemCompact=that.buildCompact("<unitDouble>",that.buildCompact(getFromId(unitTypeContext),doubleValue));break;default:var isRawType;var isLargeIntegerType;try{isRawType=(typeID===DescValueType.RAWTYPE);}catch(e){} try{isLargeIntegerType=(typeID===DescValueType.LARGEINTEGERTYPE);}catch(e){} if(isRawType) {itemCompact=that.buildCompact("<data>",list.getData(itemIndex));} else if(isLargeIntegerType) {itemCompact=that.buildCompact("<largeInteger>",list.getLargeInteger(itemIndex));} else {throw new Error("[jamEngine getFromList] Unknown descriptor value type: "+typeID);} break;} arr[itemIndex]=itemCompact;} return arr;} function getFromDescriptor(desc,parentContext) {if(desc) {var obj={};var keyCount;try{keyCount=desc.count;}catch(e){return null;} for(var keyIndex=0;keyIndex<keyCount;keyIndex++) {var keyID=desc.getKey(keyIndex);var keyString=getFromId(["<key>",keyID],parentContext);var keyCompact;var typeID;try{typeID=desc.getType(keyID);}catch(e){continue;} switch(typeID) {case DescValueType.BOOLEANTYPE:keyCompact=that.buildCompact("<boolean>",desc.getBoolean(keyID));break;case DescValueType.CLASSTYPE:keyCompact=that.buildCompact("<class>",getFromId(["<class>",desc.getClass(keyID)]));break;case DescValueType.DOUBLETYPE:keyCompact=that.buildCompact("<double>",desc.getDouble(keyID));break;case DescValueType.ENUMERATEDTYPE:var enumTypeContext=["<enumType>",desc.getEnumerationType(keyID)];var enumValueContext=["<enumValue>",desc.getEnumerationValue(keyID)];keyCompact=that.buildCompact("<enumerated>",that.buildCompact(getFromId(enumTypeContext),getFromId(enumValueContext,enumTypeContext)));break;case DescValueType.INTEGERTYPE:keyCompact=that.buildCompact("<integer>",desc.getInteger(keyID));break;case DescValueType.LISTTYPE:keyCompact=that.buildCompact("<list>",getFromList(desc.getList(keyID)));break;case DescValueType.OBJECTTYPE:var objectTypeContext=["<class>",desc.getObjectType(keyID)];var objectValue=desc.getObjectValue(keyID);keyCompact=that.buildCompact("<object>",that.buildCompact(getFromId(objectTypeContext),getFromDescriptor(objectValue,objectTypeContext)));break;case DescValueType.ALIASTYPE:try {var fileRef=desc.getPath(keyID);keyCompact=that.buildCompact("<path>",fileRef.fsName);} catch(e) {keyCompact=that.buildCompact("<path>",incompatiblePlatformPath);} break;case DescValueType.REFERENCETYPE:keyCompact=that.buildCompact("<reference>",getFromReference(desc.getReference(keyID)));break;case DescValueType.STRINGTYPE:keyCompact=that.buildCompact("<string>",desc.getString(keyID));break;case DescValueType.UNITDOUBLE:var unitTypeContext=["<unit>",desc.getUnitDoubleType(keyID)];var doubleValue=desc.getUnitDoubleValue(keyID);keyCompact=that.buildCompact("<unitDouble>",that.buildCompact(getFromId(unitTypeContext),doubleValue));break;default:var isRawType;var isLargeIntegerType;try{isRawType=(typeID===DescValueType.RAWTYPE);}catch(e){} try{isLargeIntegerType=(typeID===DescValueType.LARGEINTEGERTYPE);}catch(e){} if(isRawType) {keyCompact=that.buildCompact("<data>",desc.getData(keyID));} else if(isLargeIntegerType) {keyCompact=that.buildCompact("<largeInteger>",desc.getLargeInteger(keyID));} else {throw new Error("[jamEngine getFromDescriptor] Unknown descriptor value type: "+typeID);} break;} obj[keyString]=keyCompact;} return obj;} else {return null;}} jamEngine.jsonToActionDescriptor=function(descriptorObj) {that=this;var actionDescriptor;if(descriptorObj) {actionDescriptor=new ActionDescriptor();putInDescriptor(actionDescriptor,descriptorObj);} return actionDescriptor;};jamEngine.jsonToActionReference=function(referenceArr) {that=this;var actionReference;if(referenceArr) {actionReference=new ActionReference();putInReference(actionReference,referenceArr);} return actionReference;};jamEngine.eventIdAndActionDescriptorToJson=function(eventId,actionDescriptor) {that=this;var eventIdContext=["<event>",eventId];return{"<event>":getFromId(eventIdContext),"<descriptor>":getFromDescriptor(actionDescriptor,eventIdContext)};};jamEngine.classIdAndActionDescriptorToJson=function(classId,actionDescriptor) {that=this;var classIdContext=["<class>",classId];return{"<class>":getFromId(classIdContext),"<descriptor>":getFromDescriptor(actionDescriptor,classIdContext)};};jamEngine.actionReferenceToJson=function(actionReference) {that=this;return getFromReference(actionReference);};function getReferenceClassId(ref) {classId=0;do {try{var desiredClassId=ref.getDesiredClass();}catch(e){break;} if(desiredClassId!==propertyClassId) {classId=desiredClassId;break;} ref=ref.getContainer();} while(ref);return classId;} jamEngine.jsonPlay=function(eventUniIdStr,descriptorObj,displayDialogs) {var eventId=this.uniIdStrToId(eventUniIdStr);var desc=this.jsonToActionDescriptor(descriptorObj);var parentContext;if(eventId===getEventId) {var ref=desc.getReference(targetKeyId);parentContext=["<class>",getReferenceClassId(ref)];} else {parentContext=["<event>",eventId];} return getFromDescriptor(app.executeAction(eventId,desc,displayDialogs||this.displayDialogs),parentContext);};jamEngine.jsonGet=function(referenceArr) {var ref=this.jsonToActionReference(referenceArr);return getFromDescriptor(app.executeActionGet(ref),["<class>",getReferenceClassId(ref)]);};jamEngine.normalizeJsonItem=function(item,options) {function normalizeItem(item) {var explicit=that.parseCompact(item);var type=explicit[0];var value=explicit[1];var normalizedValue;switch(type) {case"<boolean>":case"<data>":case"<double>":case"<identifier>":case"<index>":case"<integer>":case"<largeInteger>":case"<name>":case"<offset>":case"<path>":case"<string>":normalizedValue=value;break;case"<class>":normalizedValue=value&&getFromId(["<class>",that.uniIdStrToId(value)]);break;case"<enumerated>":var enumerated=that.parseCompact(value);var enumTypeContext=["<enumType>",that.uniIdStrToId(enumerated[0])];var enumValueContext=["<enumValue>",that.uniIdStrToId(enumerated[1])];normalizedValue=that.buildCompact(getFromId(enumTypeContext),getFromId(enumValueContext,enumTypeContext));break;case"<list>":normalizedValue=[];for(var i=0;i<value.length;i++) {normalizedValue.push(normalizeItem(value[i]));} break;case"<object>":var object=that.parseCompact(value);var objectClassContext=["<class>",that.uniIdStrToId(object[0])];var objectDescriptor=object[1];var normalizedDescriptor;if(objectDescriptor===null) {normalizedDescriptor=null;} else {normalizedDescriptor={};for(var key in objectDescriptor) {if(objectDescriptor.hasOwnProperty(key)) {var objectKeyContext=["<key>",that.uniIdStrToId(key)];normalizedDescriptor[getFromId(objectKeyContext,objectClassContext)]=normalizeItem(objectDescriptor[key]);}}} normalizedValue=that.buildCompact(getFromId(objectClassContext),normalizedDescriptor);break;case"<property>":normalizedValue=getFromId(["<key>",that.uniIdStrToId(value)]);break;case"<reference>":normalizedValue=[];for(var i=0;i<value.length;i++) {var container=that.parseCompact(value[i]);normalizedValue.push(that.buildCompact(getFromId(["<class>",that.uniIdStrToId(container[0])]),normalizeItem(container[1])));} break;case"<unitDouble>":var unitDouble=that.parseCompact(value);var unitTypeContext=["<unit>",that.uniIdStrToId(unitDouble[0])];normalizedValue=that.buildCompact(getFromId(unitTypeContext),unitDouble[1]);break;default:throw new Error("[jamEngine.normalizeJsonItem] Unknown item type: "+type);break;} return that.buildCompact(type,normalizedValue);} that=this;var saveMeaningfulIds=this.meaningfulIds;var saveParseFriendly=this.parseFriendly;if(options&&(options.constructor===Object)) {if(typeof options.meaningfulIds!=='undefined') {this.meaningfulIds=options.meaningfulIds;} if(typeof options.parseFriendly!=='undefined') {this.parseFriendly=options.parseFriendly;}} var normalizedItem=normalizeItem(item);this.meaningfulIds=saveMeaningfulIds;this.parseFriendly=saveParseFriendly;return normalizedItem;};function simplifyRef(ref) {var simplifiedRef=[];for(var i=0;i<ref.length;i++) {var element=ref[i];var simplifiedElement={};var desiredClass=element[0];var form=element[1][0];var value=element[1][1];switch(form) {case"<class>":case"<identifier>":case"<index>":case"<name>":case"<offset>":case"<property":simplifiedElement[desiredClass]=value;break;case"<enumerated>":simplifiedElement[desiredClass]=value[1];break;default:throw new Error("[jamEngine simplifyRef] Unexpected element form: "+form);break;} simplifiedRef.push(simplifiedElement);} return simplifiedRef;} function simplifyItem(item,hook) {var simplifiedItem;var type=item[0];var value=item[1];switch(type) {case"<boolean>":case"<class>":case"<data>":case"<double>":case"<integer>":case"<largeInteger>":case"<path>":case"<string>":simplifiedItem=value;break;case"<list>":simplifiedItem=simplifyList(value,hook);break;case"<enumerated>":case"<unitDouble>":simplifiedItem=value[1];break;case"<object>":simplifiedItem=simplifyDesc(value[1],hook);break;case"<reference>":simplifiedItem=simplifyRef(value);break;default:throw new Error("[jamEngine simplifyItem] Unexpected item type: "+type);break;} return simplifiedItem;} function simplifyList(list,hook) {var simplifiedList=[];for(var i=0;i<list.length;i++) {simplifiedList.push(simplifyItem(list[i],hook));} return simplifiedList;} function simplifyDesc(desc,hook) {var getDefaultValue=function(desc,key){return simplifyItem(desc[key],hook);};var simplifiedDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=undefined;if(typeof hook==='function') {value=hook(desc,key,getDefaultValue);} if(typeof value==='undefined') {value=simplifyItem(desc[key],hook);} simplifiedDesc[key]=value;}} return simplifiedDesc;} jamEngine.simplifyObject=function(object,hookFunction) {return simplifyDesc((this.normalizeJsonItem(object,{meaningfulIds:true,parseFriendly:true}))[1][1],hookFunction);};jamEngine.simplifyList=function(list,hookFunction) {return simplifyList((this.normalizeJsonItem(list,{meaningfulIds:true,parseFriendly:true}))[1],hookFunction);};jamEngine.parseCompact=function(compact) {var result=[];if(compact.constructor===Object) {var keys=[];for(var k in compact) {if(compact.hasOwnProperty(k)) {keys.push(k);}} if(keys.length===1) {result[0]=keys[0];result[1]=compact[keys[0]];} else {throw new Error("[jamEngine.parseCompact] Syntax error: "+compact.toSource());}} else if(compact.constructor===Array) {if(compact.length===2) {result[0]=compact[0];result[1]=compact[1];} else {throw new Error("[jamEngine.parseCompact] Syntax error: "+compact.toSource());}} else {throw new Error("[jamEngine.parseCompact] JavaScript object or array expected");} return result;};jamEngine.compactToExplicit=function(compact,typeKey,valueKey) {var explicit={};var typeValue=this.parseCompact(compact);explicit[typeKey||"<type>"]=typeValue[0];explicit[valueKey||"<value>"]=typeValue[1];return explicit;};jamEngine.buildCompact=function(type,value) {var compact;if(typeof type==='string') {if(this.parseFriendly) {compact=[type,value];} else {compact={};compact[type]=value;}} else {throw new Error("[jamEngine.buildCompact] String expected");} return compact;};jamEngine.explicitToCompact=function(explicit,typeKey,valueKey) {var compact;if(explicit.constructor===Object) {compact=this.buildCompact(explicit[typeKey||"<type>"],explicit[valueKey||"<value>"]);} else {throw new Error("[jamEngine.explicitToCompact] JavaScript object expected");} return compact;};for(var charIdStr in conflictingStringIdStrs) {if(conflictingStringIdStrs.hasOwnProperty(charIdStr)) {var stringIdStrs=conflictingStringIdStrs[charIdStr];for(var index=stringIdStrs.length-1;index>=0;index--) {var stringIdStr=stringIdStrs[index];if(!(app.charIDToTypeID(charIdStr.substring(1,5))===app.stringIDToTypeID(stringIdStr))) {stringIdStrs.splice(index,1);}} if(stringIdStrs.length<2) {delete conflictingStringIdStrs[charIdStr];}}} for(var charIdStr in contextRules) {if(contextRules.hasOwnProperty(charIdStr)) {if(charIdStr in conflictingStringIdStrs) {var rule=contextRules[charIdStr];for(var kind in rule) {if(rule.hasOwnProperty(kind)) {switch(kind) {case"<class>":case"<event>":case"<enumType>":case"<enumValue>":case"<key>":case"<unknown>":if(app.charIDToTypeID(charIdStr.substring(1,5))!=app.stringIDToTypeID(rule[kind])) {throw new Error("[jamEngine] "+"\""+charIdStr+"\" and \""+rule[kind]+"\" are not equivalent ID strings");} break;case"<classKey>":case"<eventKey>":case"<typeValue>":for(var parent in rule[kind]) {if(rule[kind].hasOwnProperty(parent)) {if(app.charIDToTypeID(charIdStr.substring(1,5))!=app.stringIDToTypeID(rule[kind][parent])) {throw new Error("[jamEngine] "+"\""+charIdStr+"\" and \""+rule[kind][parent]+"\" are not equivalent ID strings");}}} break;}}}} else {delete contextRules[charIdStr];}}}}());}
if(typeof jamHelpers!=='object') {var jamHelpers={};(function() {jamHelpers.toColorObject=function(color) {var colorObject;if(color.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"book":case"name":typedValue=["<string>",localize(value)];break;case"bookKey":typedValue=["<data>",value];break;case"bookID":typedValue=["<integer>",value];break;case"a":case"b":case"black":case"blue":case"brightness":case"cyan":case"gray":case"green":case"luminance":case"magenta":case"red":case"saturation":case"yellowColor":typedValue=["<double>",value];break;case"hue":typedValue=["<unitDouble>",["angleUnit",value]];break;case"color":var colorClass;if((("book"in value)&&("name"in value))||(("bookID"in value)&&("bookKey"in value))) {colorClass="bookColor";} else if(("cyan"in value)&&("magenta"in value)&&("yellowColor"in value)&&("black"in value)) {colorClass="CMYKColorClass";} else if("gray"in value) {colorClass="grayscale";} else if(("hue"in value)&&("saturation"in value)&&("brightness"in value)) {colorClass="HSBColorClass";} else if(("luminance"in value)&&("a"in value)&&("b"in value)) {colorClass="labColor";} else if(("red"in value)&&("green"in value)&&("blue"in value)) {colorClass="RGBColor";} typedValue=["<object>",[colorClass,restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} colorObject=restoreDesc({"color":color})["color"];} else if(color.constructor===Array) {var colorClass=color[0];switch(jamEngine.uniIdStrToId(colorClass)) {case jamEngine.uniIdStrToId("bookColor"):switch(color[1].length) {case 2:if(typeof color[1][0]==='string') {colorObject=["<object>",["bookColor",{"book":["<string>",color[1][0]],"name":["<string>",color[1][1]]}]];} else if(typeof color[1][0]==='number') {colorObject=["<object>",["bookColor",{"bookID":["<integer>",color[1][0]],"bookKey":["<data>",color[1][1]]}]];} break;case 4:colorObject=["<object>",["bookColor",{"book":["<string>",color[1][0]],"name":["<string>",color[1][1]],"bookID":["<integer>",color[1][2]],"bookKey":["<data>",color[1][3]]}]];break;} break;case jamEngine.uniIdStrToId("CMYKColorClass"):colorObject=["<object>",["CMYKColorClass",{"cyan":["<double>",color[1][0]],"magenta":["<double>",color[1][1]],"yellowColor":["<double>",color[1][2]],"black":["<double>",color[1][3]]}]];break;case jamEngine.uniIdStrToId("grayscale"):colorObject=["<object>",["grayscale",{"gray":["<double>",(color[1].constructor===Array)?color[1][0]:color[1]]}]];break;case jamEngine.uniIdStrToId("HSBColorClass"):colorObject=["<object>",["HSBColorClass",{"hue":["<unitDouble>",["angleUnit",color[1][0]]],"saturation":["<double>",color[1][1]],"brightness":["<double>",color[1][2]]}]];break;case jamEngine.uniIdStrToId("labColor"):colorObject=["<object>",["labColor",{"luminance":["<double>",color[1][0]],"a":["<double>",color[1][1]],"b":["<double>",color[1][2]]}]];break;case jamEngine.uniIdStrToId("RGBColor"):colorObject=["<object>",["RGBColor",{"red":["<double>",color[1][0]],"green":["<double>",color[1][1]],"blue":["<double>",color[1][2]]}]];break;default:throw new Error("[jamHelpers.toColorObject] Unrecognized color class: "+colorClass);break;}} return colorObject;};jamHelpers.fromColorObject=function(colorObject,explicit) {var color;if(explicit) {color=jamEngine.simplifyObject(colorObject);} else {var normalizedColorObject=jamEngine.normalizeJsonItem(colorObject,{meaningfulIds:true,parseFriendly:true});var colorClass=normalizedColorObject[1][0];var colorDesc=normalizedColorObject[1][1];switch(colorClass) {case"bookColor":var book=colorDesc["book"][1];var name=colorDesc["name"][1];if(("bookID"in colorDesc)&&("bookKey"in colorDesc)) {var bookID=colorDesc["bookID"][1];var bookKey=colorDesc["bookKey"][1];color=[colorClass,[book,name,bookID,bookKey]];} else {color=[colorClass,[book,name]];} break;case"CMYKColorClass":var cyan=colorDesc["cyan"][1];var magenta=colorDesc["magenta"][1];var yellowColor=colorDesc["yellowColor"][1];var black=colorDesc["black"][1];color=[colorClass,[cyan,magenta,yellowColor,black]];break;case"grayscale":var gray=colorDesc["gray"][1];color=[colorClass,[gray]];break;case"HSBColorClass":var hue=colorDesc["hue"][1][1];var saturation=colorDesc["saturation"][1];var brightness=colorDesc["brightness"][1];color=[colorClass,[hue,saturation,brightness]];break;case"labColor":var luminance=colorDesc["luminance"][1];var a=colorDesc["a"][1];var b=colorDesc["b"][1];color=[colorClass,[luminance,a,b]];break;case"RGBColor":var red=colorDesc["red"][1];var green=colorDesc["green"][1];var blue=colorDesc["blue"][1];color=[colorClass,[red,green,blue]];break;default:throw new Error("[jamHelpers.fromColorObject] Unrecognized color class: "+colorClass);break;}} return color;};jamHelpers.nameToColorObject=function(setName,colorName) {return this.toColorObject(jamColors.nameToColor(setName,colorName));};jamHelpers.hexToColorObject=function(hexColorString) {return this.toColorObject(["RGBColor",jamColors.hexToRgb(hexColorString)]);};jamHelpers.hexFromColorObject=function(colorObject,noSign,lowercase) {var color=this.fromColorObject(colorObject);return(color[0]==="RGBColor")?jamColors.rgbToHex(color[1],noSign,lowercase):null;};jamHelpers.toGradientObject=function(gradient) {var gradientObject;if(gradient.constructor===Object) {var that=this;function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"showTransparency":case"vectorColor":typedValue=["<boolean>",value];break;case"name":typedValue=["<string>",localize(value)];break;case"gradientForm":typedValue=["<enumerated>",["gradientForm",value]];break;case"type":typedValue=["<enumerated>",["colorStopType",value]];break;case"colorSpace":typedValue=["<enumerated>",["colorSpace",value]];break;case"location":case"midpoint":case"randomSeed":case"smoothness":typedValue=["<integer>",value];break;case"interpolation":typedValue=["<double>",value];break;case"opacity":typedValue=["<unitDouble>",["percentUnit",value]];break;case"colors":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["colorStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"transparency":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["transparencyStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"minimum":case"maximum":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;case"color":typedValue=that.toColorObject(value);break;case"gradient":typedValue=["<object>",["gradientClassEvent",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} gradientObject=restoreDesc({"gradient":gradient})["gradient"];} else if(gradient.constructor===Array) {var gradientObj={};var gradientName=gradient[0];if(gradientName) {gradientObj["name"]=["<string>",gradientName];} var gradientForm=gradient[1];gradientObj["gradientForm"]=["<enumerated>",["gradientForm",gradientForm]];switch(jamEngine.uniIdStrToId(gradientForm)) {case jamEngine.uniIdStrToId("customStops"):gradientObj["interpolation"]=["<double>",gradient[2]];var colorStops=gradient[3];var colorsArr=[];for(var i=0;i<colorStops.length;i++) {var colorStopObj={};colorStopObj["location"]=["<integer>",colorStops[i][0]];colorStopObj["midpoint"]=["<integer>",colorStops[i][1]];var type=colorStops[i][2];colorStopObj["type"]=["<enumerated>",["colorStopType",type]];switch(jamEngine.uniIdStrToId(type)) {case jamEngine.uniIdStrToId("userStop"):colorStopObj["color"]=this.toColorObject(colorStops[i][3]);break;case jamEngine.uniIdStrToId("backgroundColor"):case jamEngine.uniIdStrToId("foregroundColor"):break;default:throw new Error("[jamHelpers.toGradientObject] Unrecognized color stop type: "+type);break;} colorsArr.push(["<object>",["colorStop",colorStopObj]]);} gradientObj["colors"]=["<list>",colorsArr];var transparencyStops=gradient[4];if(typeof transparencyStops!=='undefined') {var transparencyArr=[];for(var j=0;j<transparencyStops.length;j++) {var transparencyStopObj={};transparencyStopObj["location"]=["<integer>",transparencyStops[j][0]];transparencyStopObj["midpoint"]=["<integer>",transparencyStops[j][1]];transparencyStopObj["opacity"]=["<unitDouble>",["percentUnit",transparencyStops[j][2]]];transparencyArr.push(["<object>",["transparencyStop",transparencyStopObj]]);} gradientObj["transparency"]=["<list>",transparencyArr];} break;case jamEngine.uniIdStrToId("colorNoise"):gradientObj["randomSeed"]=["<integer>",gradient[2]];gradientObj["showTransparency"]=["<boolean>",gradient[3]];gradientObj["vectorColor"]=["<boolean>",gradient[4]];gradientObj["smoothness"]=["<integer>",gradient[5]];var colorSpace=gradient[6];gradientObj["colorSpace"]=["<enumerated>",["colorSpace",colorSpace]];switch(jamEngine.uniIdStrToId(colorSpace)) {case jamEngine.uniIdStrToId("RGBColor"):case jamEngine.uniIdStrToId("HSBColorEnum"):case jamEngine.uniIdStrToId("labColor"):break;default:throw new Error("[jamHelpers.toGradientObject] Unrecognized color space: "+colorSpace);break;} gradientObj["minimum"]=this.toIntegerList(gradient[7]);gradientObj["maximum"]=this.toIntegerList(gradient[8]);break;default:throw new Error("[jamHelpers.toGradientObject] Unrecognized gradient form: "+gradientForm);break;} gradientObject=["<object>",["gradientClassEvent",gradientObj]];} return gradientObject;};jamHelpers.fromGradientObject=function(gradientObject,explicit) {var gradient;if(explicit) {gradient=jamEngine.simplifyObject(gradientObject);} else {gradient=[];var normalizedGradientObject=jamEngine.normalizeJsonItem(gradientObject,{meaningfulIds:true,parseFriendly:true});var gradientDesc=normalizedGradientObject[1][1];var name=gradientDesc["name"];gradient.push((name)?name[1]:null);var gradientForm=gradientDesc["gradientForm"][1][1];gradient.push(gradientForm);switch(gradientForm) {case"customStops":gradient.push(gradientDesc["interpolation"][1]);var colors=gradientDesc["colors"][1];var colorStops=[];for(var i=0;i<colors.length;i++) {var colorStop=colors[i][1][1];var colorStopArr=[];colorStopArr.push(colorStop["location"][1]);colorStopArr.push(colorStop["midpoint"][1]);var type=colorStop["type"][1][1];colorStopArr.push(type);switch(type) {case"userStop":colorStopArr.push(this.fromColorObject(colorStop["color"]));break;case"backgroundColor":case"foregroundColor":break;default:throw new Error("[jamHelpers.fromGradientObject] Unrecognized color stop type: "+type);break;} colorStops.push(colorStopArr);} gradient.push(colorStops);var transparency=gradientDesc["transparency"][1];var transparencyStops=[];for(var j=0;j<transparency.length;j++) {var transparencyStop=transparency[j][1][1];var transparencyStopArr=[];transparencyStopArr.push(transparencyStop["location"][1]);transparencyStopArr.push(transparencyStop["midpoint"][1]);transparencyStopArr.push(transparencyStop["opacity"][1][1]);transparencyStops.push(transparencyStopArr);} gradient.push(transparencyStops);break;case"colorNoise":gradient.push(gradientDesc["randomSeed"][1]);gradient.push(gradientDesc["showTransparency"][1]);gradient.push(gradientDesc["vectorColor"][1]);gradient.push(gradientDesc["smoothness"][1]);var colorSpace=gradientDesc["colorSpace"][1][1] gradient.push(colorSpace);switch(colorSpace) {case"RGBColor":case"HSBColorEnum":case"labColor":break;default:throw new Error("[jamHelpers.fromGradientObject] Unrecognized color space: "+colorSpace);break;} gradient.push(this.fromIntegerList(gradientDesc["minimum"]));gradient.push(this.fromIntegerList(gradientDesc["maximum"]));break;default:throw new Error("[jamHelpers.fromGradientObject] Unrecognized gradient form: "+gradientForm);break;}} return gradient;};jamHelpers.toCurvesAdjustmentList=function(curvesAdjustmentsArr) {var curvesAdjustmentListArr=[];for(var i=0;i<curvesAdjustmentsArr.length;i++) {var curvesAdjustment=curvesAdjustmentsArr[i];var channel=["<reference>",[["channel",["<enumerated>",["channel",curvesAdjustment[0]]]]]];var info=curvesAdjustment[1];var type=info[0];var points=info[1];var pointArr=[];switch(jamEngine.uniIdStrToId(type)) {case jamEngine.uniIdStrToId("mapping"):for(var j=0;j<points.length;j++) {pointArr.push(["<integer>",points[j]]);} var mapping=["<list>",pointArr];curvesAdjustmentListArr.push(["<object>",["curvesAdjustment",{"channel":channel,"mapping":mapping}]]);break;case jamEngine.uniIdStrToId("curve"):for(var j=0;j<points.length;j++) {var point=["<object>",["point",{"horizontal":["<double>",points[j][0]],"vertical":["<double>",points[j][1]]}]];pointArr.push(point);} var curve=["<list>",pointArr];curvesAdjustmentListArr.push(["<object>",["curvesAdjustment",{"channel":channel,"curve":curve}]]);break;default:throw new Error("[jamHelpers.toCurvesAdjustmentList] Unrecognized curve type");break;}} return["<list>",curvesAdjustmentListArr];};jamHelpers.toHueSatAdjustmentV2List=function(hueSatAdjustmentsArr) {var hueSatAdjustmentListArr=[];for(var i=0;i<hueSatAdjustmentsArr.length;i++) {var hueSatAdjustmentArr=hueSatAdjustmentsArr[i];var hueSatAdjustmentObj;if((hueSatAdjustmentArr.length===3)&&(i===0)) {hueSatAdjustmentObj={"hue":["<integer>",hueSatAdjustmentArr[0]],"saturation":["<integer>",hueSatAdjustmentArr[1]],"lightness":["<integer>",hueSatAdjustmentArr[2]]};} else if(hueSatAdjustmentArr.length===(1+4+3)) {hueSatAdjustmentObj={"localRange":["<integer>",hueSatAdjustmentArr[0]],"beginRamp":["<integer>",hueSatAdjustmentArr[1]],"beginSustain":["<integer>",hueSatAdjustmentArr[2]],"endSustain":["<integer>",hueSatAdjustmentArr[3]],"endRamp":["<integer>",hueSatAdjustmentArr[4]],"hue":["<integer>",hueSatAdjustmentArr[5]],"saturation":["<integer>",hueSatAdjustmentArr[6]],"lightness":["<integer>",hueSatAdjustmentArr[7]]};} hueSatAdjustmentListArr.push(["<object>",["hueSatAdjustmentV2",hueSatAdjustmentObj]]);} return["<list>",hueSatAdjustmentListArr];};jamHelpers.toBlendRangeList=function(blendRanges) {var blendRangeListArr=[];var blendRangeObject;for(var i=0;i<blendRanges.length;i++) {var blendRange=blendRanges[i];if(blendRange.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;case"srcBlackMin":case"srcBlackMax":case"srcWhiteMin":case"srcWhiteMax":case"destBlackMin":case"destBlackMax":case"destWhiteMin":case"destWhiteMax":typedValue=["<integer>",value];break;case"blendRange":typedValue=["<object>",["blendRange",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} blendRangeObject=restoreDesc({"blendRange":blendRange})["blendRange"];} else if(blendRange.constructor===Array) {blendRangeObject=["<object>",["blendRange",{"channel":["<reference>",[["channel",["<enumerated>",["channel",blendRange[0]]]]]],"srcBlackMin":["<integer>",blendRange[1]],"srcBlackMax":["<integer>",blendRange[2]],"srcWhiteMin":["<integer>",blendRange[3]],"srcWhiteMax":["<integer>",blendRange[4]],"destBlackMin":["<integer>",blendRange[5]],"destBlackMax":["<integer>",blendRange[6]],"destWhiteMin":["<integer>",blendRange[7]],"destWhiteMax":["<integer>",blendRange[8]]}]];} blendRangeListArr.push(blendRangeObject);} return["<list>",blendRangeListArr];};jamHelpers.fromBlendRangeList=function(blendRangeList,explicit) {var blendRanges;if(explicit) {var replaceChannelHook=function(desc,key,getDefaultValue) {var replacedValue=undefined;if(key==="channel") {var value=getDefaultValue(desc,key);replacedValue=value[0]["channel"];} return replacedValue;};blendRanges=jamEngine.simplifyList(blendRangeList,replaceChannelHook);} else {blendRanges=[];var normalizedBlendRangeList=jamEngine.normalizeJsonItem(blendRangeList,{meaningfulIds:true,parseFriendly:true});for(index=0;index<normalizedBlendRangeList[1].length;index++) {var blendRange=normalizedBlendRangeList[1][index][1][1];var blendRangeArr=[blendRange["channel"][1][0][1][1][1],blendRange["srcBlackMin"][1],blendRange["srcBlackMax"][1],blendRange["srcWhiteMin"][1],blendRange["srcWhiteMax"][1],blendRange["destBlackMin"][1],blendRange["destBlackMax"][1],blendRange["destWhiteMin"][1],blendRange["destWhiteMax"][1]];blendRanges.push(blendRangeArr);}} return blendRanges;};jamHelpers.toIntegerList=function(integersArr) {var integerListArr=[];for(var i=0;i<integersArr.length;i++) {integerListArr.push(["<integer>",integersArr[i]]);} return["<list>",integerListArr];};jamHelpers.fromIntegerList=function(integerList) {var normalizedIntegerList=jamEngine.normalizeJsonItem(integerList,{meaningfulIds:true,parseFriendly:true});var integersArr=[];var integers=normalizedIntegerList[1];for(var i=0;i<integers.length;i++) {integersArr.push(integers[i][1]);} return integersArr;};function toUnitDouble(value,unit) {return(typeof unit==='undefined')?["<double>",value]:["<unitDouble>",[unit,value]];} jamHelpers.toPointObject=function(pointArr) {var data=pointArr[0];var unit=pointArr[1];var pointObject=["<object>",["point",{"horizontal":toUnitDouble(data[0],unit),"vertical":toUnitDouble(data[1],unit)}]];return pointObject;};jamHelpers.toPointList=function(pointsArr) {var data=pointsArr[0];var unit=pointsArr[1];var pointListArr=[];for(var i=0;i<data.length;i++) {pointListArr.push (["<object>",["point",{"horizontal":toUnitDouble(data[i][0],unit),"vertical":toUnitDouble(data[i][1],unit)}]]);} return["<list>",pointListArr];};jamHelpers.fromPointList=function(pointList) {var pointsArr=[];var normalizedPointList=jamEngine.normalizeJsonItem(pointList,{meaningfulIds:true,parseFriendly:true});var data=[];var unit;function getValue(coordinate) {var value;switch(coordinate[0]) {case"<unitDouble>":unit=coordinate[1][0];value=coordinate[1][1];break;case"<double>":unit=undefined;value=coordinate[1];break;} return value;} var pointListArr=normalizedPointList[1];for(var i=0;i<pointListArr.length;i++) {data.push([getValue(pointListArr[i][1][1]["horizontal"]),getValue(pointListArr[i][1][1]["vertical"])]);} pointsArr.push(data);if(unit) {pointsArr.push(unit);} return pointsArr;};jamHelpers.toOffsetObject=function(offsetArr) {var data=offsetArr[0];var unit=offsetArr[1];var offsetObject=["<object>",["offset",{"horizontal":toUnitDouble(data[0],unit),"vertical":toUnitDouble(data[1],unit)}]];return offsetObject;};jamHelpers.toRectangleObject=function(rectangleArr) {var data=rectangleArr[0];var unit=rectangleArr[1];var rectangleObj={"left":toUnitDouble(data[0],unit),"top":toUnitDouble(data[1],unit),"right":toUnitDouble(data[2],unit),"bottom":toUnitDouble(data[3],unit)};if(data.length===5) {rectangleObj["radius"]=toUnitDouble(data[4],unit);} return["<object>",["rectangle",rectangleObj]];};jamHelpers.toEllipseObject=function(ellipseArr) {var data=ellipseArr[0];var unit=ellipseArr[1];var ellipseObject=["<object>",["ellipse",{"left":toUnitDouble(data[0],unit),"top":toUnitDouble(data[1],unit),"right":toUnitDouble(data[2],unit),"bottom":toUnitDouble(data[3],unit)}]];return ellipseObject;};jamHelpers.toCustomShapeObject=function(customShapeArr) {var data=customShapeArr[0];var unit=customShapeArr[1];var customShapeObject=["<object>",["customShape",{"name":["<string>",data[0]],"left":toUnitDouble(data[1],unit),"top":toUnitDouble(data[2],unit),"right":toUnitDouble(data[3],unit),"bottom":toUnitDouble(data[4],unit)}]];return customShapeObject;};jamHelpers.toCurvePointList=function(curvePoints) {var curvePointListArr=[];var curvePointObject;for(var i=0;i<curvePoints.length;i++) {var curvePoint=curvePoints[i];if(curvePoint.constructor===Object) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"continuity":typedValue=["<boolean>",value];break;case"horizontal":case"vertical":typedValue=["<double>",value];break;case"curvePoint":typedValue=["<object>",["curvePoint",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} curvePointObject=restoreDesc({"curvePoint":curvePoint})["curvePoint"];} else if(curvePoint.constructor===Array) {switch(curvePoint.length) {case 2:curvePointObject=["<object>",["curvePoint",{"horizontal":["<double>",curvePoint[0]],"vertical":["<double>",curvePoint[1]]}]];break;case 3:curvePointObject=["<object>",["curvePoint",{"horizontal":["<double>",curvePoint[0]],"vertical":["<double>",curvePoint[1]],"continuity":["<boolean>",curvePoint[2]]}]];break;}} curvePointListArr.push(curvePointObject);} return["<list>",curvePointListArr];};jamHelpers.fromCurvePointList=function(curvePointList,explicit) {var curvePoints;if(explicit) {curvePoints=jamEngine.simplifyList(curvePointList);} else {curvePoints=[];var normalizedCurvePointList=jamEngine.normalizeJsonItem(curvePointList,{meaningfulIds:true,parseFriendly:true});for(index=0;index<normalizedCurvePointList[1].length;index++) {var curvePoint=normalizedCurvePointList[1][index][1][1];var curvePointArr=[curvePoint["horizontal"][1],curvePoint["vertical"][1]];if("continuity"in curvePoint) {curvePointArr.push(curvePoint["continuity"][1]);} curvePoints.push(curvePointArr);}} return curvePoints;};jamHelpers.toRationalPointList=function(rationalPointsArr) {var data=rationalPointsArr[0];var unit=rationalPointsArr[1];var rationalPointListArr=[];for(var i=0;i<data.length;i++) {rationalPointListArr.push (["<object>",["rationalPoint",{"horizontal":toUnitDouble(data[i][0],unit),"vertical":toUnitDouble(data[i][1],unit)}]]);} return["<list>",rationalPointListArr];};jamHelpers.toPathComponentList=function(pathComponents) {var pathComponentList;if(pathComponents.constructor===Object) {var unit;if("unit"in pathComponents) {unit=pathComponents["unit"];} var data=pathComponents["pathComponents"];function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"closedSubpath":case"smooth":case"windingFill":typedValue=["<boolean>",value];break;case"shapeOperation":typedValue=["<enumerated>",["shapeOperation",value]];break;case"horizontal":case"vertical":typedValue=toUnitDouble(value,unit);break;case"anchor":case"backward":case"forward":typedValue=["<object>",["point",restoreDesc(value)]];break;case"subpathListKey":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["subpathsList",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"points":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["pathPoint",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"pathComponents":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["pathComponent",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} pathComponentList=restoreDesc({"pathComponents":data})["pathComponents"];} else if(pathComponents.constructor===Array) {var pathComponentListArr=[];var data=pathComponents[0];var unit=pathComponents[1];for(var i=0;i<data.length;i++) {var shapeOperation=data[i][0];var subpaths=data[i][1];var windingFill=data[i][2];var subpathArr=[];for(var j=0;j<subpaths.length;j++) {var points=subpaths[j][0];var closedSubpath=subpaths[j][1];var pointArr=[];for(var k=0;k<points.length;k++) {var point=points[k];switch(point.length) {case 1:pointArr.push (["<object>",["pathPoint",{"anchor":["<object>",["point",{"horizontal":toUnitDouble(point[0][0],unit),"vertical":toUnitDouble(point[0][1],unit)}]]}]]);break;case 3:case 4:pointArr.push (["<object>",["pathPoint",{"anchor":["<object>",["point",{"horizontal":toUnitDouble(point[0][0],unit),"vertical":toUnitDouble(point[0][1],unit)}]],"forward":["<object>",["point",{"horizontal":toUnitDouble(point[1][0],unit),"vertical":toUnitDouble(point[1][1],unit)}]],"backward":["<object>",["point",{"horizontal":toUnitDouble(point[2][0],unit),"vertical":toUnitDouble(point[2][1],unit)}]],"smooth":["<boolean>",point[3]||false]}]]);break;}} var subpath={};if(closedSubpath) {subpath["closedSubpath"]=["<boolean>",closedSubpath];} subpath["points"]=["<list>",pointArr];subpathArr.push(["<object>",["subpathsList",subpath]]);} var pathComponent={};pathComponent["shapeOperation"]=["<enumerated>",["shapeOperation",shapeOperation]];if(windingFill) {pathComponent["windingFill"]=["<boolean>",windingFill];} pathComponent["subpathListKey"]=["<list>",subpathArr];pathComponentListArr.push(["<object>",["pathComponent",pathComponent]]);} pathComponentList=["<list>",pathComponentListArr];} return pathComponentList;};jamHelpers.fromPathComponentList=function(pathComponentList,explicit) {var pathComponents;if(explicit) {pathComponents={};var unit;var done=false;function getUnitHook(desc,key) {if(!done) {if(key==="horizontal") {var value=desc[key];if(value[0]==="<unitDouble>") {unit=value[1][0];} done=true;}} return undefined;} pathComponents["pathComponents"]=jamEngine.simplifyList(pathComponentList,getUnitHook);if(unit) {pathComponents["unit"]=unit;}} else {pathComponents=[];var normalizedPathComponentList=jamEngine.normalizeJsonItem(pathComponentList,{meaningfulIds:true,parseFriendly:true});var data=[];var unit;function getValue(coordinate) {var value;switch(coordinate[0]) {case"<unitDouble>":unit=coordinate[1][0];value=coordinate[1][1];break;case"<double>":unit=undefined;value=coordinate[1];break;} return value;} var pathComponentListArr=normalizedPathComponentList[1];for(var i=0;i<pathComponentListArr.length;i++) {var pathComponent=pathComponentListArr[i][1][1];var shapeOperation=pathComponent["shapeOperation"][1][1];var windingFill=("windingFill"in pathComponent)?pathComponent["windingFill"][1]:false;var subpathsArr=[];var subpathListArr=pathComponent["subpathListKey"][1];for(var j=0;j<subpathListArr.length;j++) {var subpathsList=subpathListArr[j][1][1];var closedSubpath=("closedSubpath"in subpathsList)?subpathsList["closedSubpath"][1]:false;var pathPointsArr=[];var pointsArr=subpathsList["points"][1];for(var k=0;k<pointsArr.length;k++) {var pathPoint=pointsArr[k][1][1];var pathPointArr=[];var anchor=pathPoint["anchor"][1][1];pathPointArr.push([getValue(anchor["horizontal"]),getValue(anchor["vertical"])]);if("forward"in pathPoint) {var forward=pathPoint["forward"][1][1];pathPointArr.push([getValue(forward["horizontal"]),getValue(forward["vertical"])]);} if("backward"in pathPoint) {var backward=pathPoint["backward"][1][1];pathPointArr.push([getValue(backward["horizontal"]),getValue(backward["vertical"])]);} var smooth=("smooth"in pathPoint)?pathPoint["smooth"][1]:false;if(smooth) {pathPointArr.push(smooth);} pathPointsArr.push(pathPointArr);} var subpathArr=[];subpathArr.push(pathPointsArr);if(closedSubpath) {subpathArr.push(closedSubpath);} subpathsArr.push(subpathArr);} var pathComponentArr=[];pathComponentArr.push(shapeOperation);pathComponentArr.push(subpathsArr);if(windingFill) {pathComponentArr.push(windingFill);} data.push(pathComponentArr);} pathComponents.push(data);if(unit) {pathComponents.push(unit);}} return pathComponents;};}());}
if(typeof jamJSON!=='object') {var jamJSON={};(function() {var state;var stack;var container;var key;var value;var escapes={'\\':'\\','"':'"','/':'/','t':'\t','n':'\n','r':'\r','f':'\f','b':'\b'};var action={'{':{go:function() {stack.push({state:'ok'});container={};state='firstokey';},ovalue:function() {stack.push({container:container,state:'ocomma',key:key});container={};state='firstokey';},firstavalue:function() {stack.push({container:container,state:'acomma'});container={};state='firstokey';},avalue:function() {stack.push({container:container,state:'acomma'});container={};state='firstokey';}},'}':{firstokey:function() {var pop=stack.pop();value=container;container=pop.container;key=pop.key;state=pop.state;},ocomma:function() {var pop=stack.pop();container[key]=value;value=container;container=pop.container;key=pop.key;state=pop.state;}},'[':{go:function() {stack.push({state:'ok'});container=[];state='firstavalue';},ovalue:function() {stack.push({container:container,state:'ocomma',key:key});container=[];state='firstavalue';},firstavalue:function() {stack.push({container:container,state:'acomma'});container=[];state='firstavalue';},avalue:function() {stack.push({container:container,state:'acomma'});container=[];state='firstavalue';}},']':{firstavalue:function() {var pop=stack.pop();value=container;container=pop.container;key=pop.key;state=pop.state;},acomma:function() {var pop=stack.pop();container.push(value);value=container;container=pop.container;key=pop.key;state=pop.state;}},':':{colon:function() {if(container.hasOwnProperty(key)) {throw new SyntaxError("[jamJSON.parse] Duplicate key: “"+key+"”");} state='ovalue';}},',':{ocomma:function() {container[key]=value;state='okey';},acomma:function() {container.push(value);state='avalue';}},'true':{go:function() {value=true;state='ok';},ovalue:function() {value=true;state='ocomma';},firstavalue:function() {value=true;state='acomma';},avalue:function() {value=true;state='acomma';}},'false':{go:function() {value=false;state='ok';},ovalue:function() {value=false;state='ocomma';},firstavalue:function() {value=false;state='acomma';},avalue:function() {value=false;state='acomma';}},'null':{go:function() {value=null;state='ok';},ovalue:function() {value=null;state='ocomma';},firstavalue:function() {value=null;state='acomma';},avalue:function() {value=null;state='acomma';}}};var number={go:function() {state='ok';},ovalue:function() {state='ocomma';},firstavalue:function() {state='acomma';},avalue:function() {state='acomma';}};var string={go:function() {state='ok';},firstokey:function() {key=value;state='colon';},okey:function() {key=value;state='colon';},ovalue:function() {state='ocomma';},firstavalue:function() {state='acomma';},avalue:function() {state='acomma';}};var commentFunc=function(){};function debackslashify(text) {return text.replace(/\\(?:u(.{4})|([^u]))/g,function(a,b,c){return(b)?String.fromCharCode(parseInt(b,16)):escapes[c];});} jamJSON.parse=function(text,validate,allowComments) {if(validate) {var tx=/^[\x20\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?(?:0|[1-9][0-9]*)(?:\.[0-9]+)?(?:[eE][+\-]?[0-9]+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;var txc=/^[\x20\t\n\r]*(?:(\/(?:\/.*|\*(?:.|[\r\n])*?\*\/))|([,:\[\]{}]|true|false|null)|(-?(?:0|[1-9][0-9]*)(?:\.[0-9]+)?(?:[eE][+\-]?[0-9]+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;var r;var i;var actionFunc;state='go';stack=[];try {while(true) {i=(allowComments)?1:0;r=(allowComments)?txc.exec(text):tx.exec(text);if(!r) {break;} if(allowComments&&r[1]) {actionFunc=commentFunc;} else if(r[i+1]) {actionFunc=action[r[i+1]][state];} else if(r[i+2]) {value=+r[i+2];actionFunc=number[state];} else {value=debackslashify(r[i+3]);actionFunc=string[state];} if(actionFunc) {actionFunc();text=text.slice(r[0].length);} else {break;}}} catch(e) {state=e;} if(state!=='ok'||/[^\x20\t\n\r]/.test(text)) {throw state instanceof SyntaxError?state:new SyntaxError("[jamJSON.parse] Invalid JSON");} return value;} else {return eval('('+text+')');}};var escapable=/[\\\"\x00-\x1F\x7F-\x9F\u00AD\u0600-\u0604\u070F\u17B4\u17B5\u200C-\u200F\u2028-\u202F\u2060-\u206F\uFEFF\uFFF0-\uFFFF]/g;var meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'};var gap;var indent;var prefixIndent;function quote(string) {escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return(typeof c==='string')?c:'\\u'+('0000'+a.charCodeAt(0).toString(16).toUpperCase()).slice(-4);})+'"':'"'+string+'"';} function str(value) {var i;var k;var v;var mind=gap;var partial;switch(typeof value) {case'string':return quote(value);case'number':return isFinite(value)?String(value):'null';case'boolean':case'null':return String(value);case'object':if(!value) {return'null';} gap+=indent;partial=[];if(value.constructor===Array) {for(i=0;i<value.length;i++) {partial[i]=str(value[i]);} v=(partial.length===0)?(gap?'[\n'+prefixIndent+mind+']':'[ ]'):(gap?'[\n'+prefixIndent+gap+partial.join(',\n'+prefixIndent+gap)+'\n'+prefixIndent+mind+']':'[ '+partial.join(', ')+' ]');gap=mind;return v;} else {for(k in value) {if(value.hasOwnProperty(k)) {v=str(value[k]);if(v) {partial.push(quote(k)+(gap&&((v.charAt(0)==='{')||(v.charAt(0)==='['))?':\n'+prefixIndent+gap:': ')+v);}}} v=(partial.length===0)?(gap?'{\n'+prefixIndent+mind+'}':'{ }'):(gap?'{\n'+prefixIndent+gap+partial.join(',\n'+prefixIndent+gap)+'\n'+prefixIndent+mind+'}':'{ '+partial.join(', ')+' }');gap=mind;return v;} default:throw new SyntaxError("[jamJSON.stringify] Invalid JSON");}} jamJSON.stringify=function(value,space,prefix) {var i;gap='';indent='';prefixIndent='';if(typeof space==='number') {for(i=0;i<space;i++) {indent+=' ';}} else if(typeof space==='string') {indent=space;} if(typeof prefix==='number') {for(i=0;i<prefix;i++) {prefixIndent+=' ';}} else if(typeof prefix==='string') {prefixIndent=prefix;} return prefixIndent+str(value);};}());}
if(typeof jamLayers!=='object') {var jamLayers={};(function() {function getObjectClass(object) {return(jamEngine.parseCompact(object))[0];} function toBlackAndWhite(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"using":typedValue=["<path>",value];break;case"useTint":typedValue=["<boolean>",value];break;case"blue":case"cyan":case"green":case"magenta":case"red":case"yellow":typedValue=["<integer>",value];break;case"tintColor":typedValue=jamHelpers.toColorObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toBrightnessContrast(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"useLegacy":typedValue=["<boolean>",value];break;case"brightness":case"contrast":typedValue=["<integer>",value];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toChannelMixer(desc) {function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"using":typedValue=["<path>",value];break;case"monochromatic":typedValue=["<boolean>",value];break;case"black":case"blue":case"cyan":case"green":case"magenta":case"red":case"yellowColor":if(hintData) {typedValue=["<unitDouble>",[hintData,value]];} else {typedValue=["<object>",["channelMatrix",restoreDesc(value,"percentUnit")]];} break;case"gray":typedValue=["<object>",["channelMatrix",restoreDesc(value,"percentUnit")]];break;case"constant":typedValue=["<unitDouble>",[hintData,value]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toColorBalance(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"preserveLuminosity":typedValue=["<boolean>",value];break;case"shadowLevels":case"midtoneLevels":case"highlightLevels":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toCurves(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"using":typedValue=["<path>",value];break;case"horizontal":case"vertical":typedValue=["<double>",value];break;case"adjustment":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["curvesAdjustment",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"curve":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["point",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"mapping":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toExposure(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"using":typedValue=["<path>",value];break;case"exposure":case"gammaCorrection":case"offset":typedValue=["<double>",value];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toGradientMap(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"dither":case"reverse":typedValue=["<boolean>",value];break;case"gradient":typedValue=jamHelpers.toGradientObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toHueSaturation(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"using":typedValue=["<path>",value];break;case"colorize":typedValue=["<boolean>",value];break;case"beginRamp":case"beginSustain":case"endRamp":case"endSustain":case"hue":case"lightness":case"localRange":case"saturation":typedValue=["<integer>",value];break;case"adjustment":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["hueSatAdjustmentV2",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toLevels(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"using":typedValue=["<path>",value];break;case"auto":case"autoBlackWhite":case"autoContrast":case"autoNeutrals":typedValue=["<boolean>",value];break;case"blackClip":case"gamma":case"whiteClip":typedValue=["<double>",value];break;case"input":case"output":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;case"adjustment":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["levelsAdjustment",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toPhotoFilter(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"preserveLuminosity":typedValue=["<boolean>",value];break;case"density":typedValue=["<integer>",value];break;case"color":typedValue=jamHelpers.toColorObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toPosterize(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"levels":typedValue=["<integer>",value];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toSelectiveColor(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"using":typedValue=["<path>",value];break;case"colors":typedValue=["<enumerated>",["colors",value]];break;case"method":typedValue=["<enumerated>",["correctionMethod",value]];break;case"black":case"cyan":case"magenta":case"yellowColor":typedValue=["<unitDouble>",["percentUnit",value]];break;case"colorCorrection":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["colorCorrection",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toThreshold(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"level":typedValue=["<integer>",value];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toVibrance(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"vibrance":case"saturation":typedValue=["<integer>",value];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toGradient(desc) {function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"align":case"dither":case"reverse":typedValue=["<boolean>",value];break;case"angle":typedValue=["<unitDouble>",["angleUnit",value]];break;case"scale":typedValue=["<unitDouble>",["percentUnit",value]];break;case"horizontal":case"vertical":typedValue=["<unitDouble>",[hintData,value]];break;case"offset":typedValue=["<object>",["point",restoreDesc(value,"percentUnit")]];break;case"type":typedValue=["<enumerated>",["gradientType",value]];break;case"gradient":typedValue=jamHelpers.toGradientObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toPattern(desc) {function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"align":typedValue=["<boolean>",value];break;case"ID":case"name":typedValue=["<string>",value];break;case"scale":typedValue=["<unitDouble>",["percentUnit",value]];break;case"horizontal":case"vertical":typedValue=["<double>",value];break;case"phase":typedValue=["<object>",["point",restoreDesc(value)]];break;case"pattern":typedValue=["<object>",["pattern",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} function toSolidColor(desc) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"color":typedValue=jamHelpers.toColorObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc(desc);} jamLayers.toLayerTypeObject=function(layerType) {var result=null;var typeArr=jamEngine.parseCompact(layerType);var kind=typeArr[0];var desc=typeArr[1];var toAdjustmentFunctions={"blackAndWhite":toBlackAndWhite,"brightnessContrast":toBrightnessContrast,"channelMixer":toChannelMixer,"colorBalance":toColorBalance,"curves":toCurves,"exposure":toExposure,"gradientMapClass":toGradientMap,"hueSaturation":toHueSaturation,"invert":null,"levels":toLevels,"photoFilter":toPhotoFilter,"posterize":toPosterize,"selectiveColor":toSelectiveColor,"thresholdClassEvent":toThreshold,"vibrance":toVibrance,"gradientLayer":toGradient,"patternLayer":toPattern,"solidColorLayer":toSolidColor};if(kind in toAdjustmentFunctions) {result=(desc)?["<object>",[kind,(toAdjustmentFunctions[kind])(desc)]]:["<class>",kind];} return result;};jamLayers.toLayerObject=function(layer) {var that=this;function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"group":case"blendClipped":case"blendInterior":case"fillNeutral":case"layerMaskAsGlobalMask":case"protectAll":case"protectComposite":case"protectPosition":case"protectTransparency":case"transparencyShapesLayer":case"vectorMaskAsGlobalMask":typedValue=["<boolean>",value];break;case"name":typedValue=["<string>",value];break;case"srcBlackMin":case"srcBlackMax":case"srcWhiteMin":case"srcWhiteMax":case"destBlackMin":case"destBlackMax":case"destWhiteMin":case"destWhiteMax":typedValue=["<integer>",value];break;case"fillOpacity":case"opacity":case"userMaskDensity":case"vectorMaskDensity":typedValue=["<unitDouble>",["percentUnit",value]];break;case"userMaskFeather":case"vectorMaskFeather":typedValue=["<unitDouble>",["pixelsUnit",value]];break;case"mode":typedValue=["<enumerated>",["blendMode",value]];break;case"color":typedValue=["<enumerated>",["color",value]];break;case"knockout":typedValue=["<enumerated>",["knockout",value]];break;case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;case"layerLocking":typedValue=["<object>",["layerLocking",restoreDesc(value)]];break;case"blendRange":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["blendRange",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"channelRestrictions":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<enumerated>",["channel",value[i]]]);} typedValue=["<list>",restoredList];break;case"type":typedValue=that.toLayerTypeObject(value);break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} var layerClass=getObjectClass(layer);return["<object>",[layerClass,restoreDesc(layer[layerClass])]];};jamLayers.fromLayerObject=function(layerObject) {var layer={};function layerHook(desc,key,getDefaultValue) {var replacedValue=undefined;switch(key) {case"layerObject":case"type":if(desc[key][0]==="<object>") {replacedValue={};replacedValue[desc[key][1][0]]=getDefaultValue(desc,key);} else if(desc[key][0]==="<class>") {replacedValue={};replacedValue[desc[key][1]]=null;} break;case"channel":var value=getDefaultValue(desc,key);replacedValue=value[0]["channel"];break;} return replacedValue;} return jamEngine.simplifyObject(["<object>",["layerObject",{"layerObject":layerObject}]],layerHook)["layerObject"];};jamLayers.toLayerClassReference=function(layer) {return["<reference>",[[getObjectClass(layer),["<class>",null]]]];};jamLayers.makeLayer=function(layer,below) {var makeDesc={"target":this.toLayerClassReference(layer),"using":this.toLayerObject(layer)};if(below) {makeDesc["below"]=["<boolean>",below];} jamEngine.jsonPlay("make",makeDesc);};jamLayers.toLayerReference=function(layer) {return["<reference>",[[getObjectClass(layer),["<enumerated>",["ordinal","targetEnum"]]]]];};jamLayers.setLayerProperties=function(layerProperties) {var layer={"layer":layerProperties};var setDesc={"target":this.toLayerReference(layer),"to":this.toLayerObject(layer)};jamEngine.jsonPlay("set",setDesc);};jamLayers.toLayerTypeReference=function(layerType) {var layerTypeClasses={"blackAndWhite":"adjustmentLayer","brightnessContrast":"adjustmentLayer","channelMixer":"adjustmentLayer","colorBalance":"adjustmentLayer","curves":"adjustmentLayer","exposure":"adjustmentLayer","gradientMapClass":"adjustmentLayer","hueSaturation":"adjustmentLayer","invert":"adjustmentLayer","levels":"adjustmentLayer","photoFilter":"adjustmentLayer","posterize":"adjustmentLayer","selectiveColor":"adjustmentLayer","thresholdClassEvent":"adjustmentLayer","vibrance":"adjustmentLayer","gradientLayer":"contentLayer","patternLayer":"contentLayer","solidColorLayer":"contentLayer"};return["<reference>",[[layerTypeClasses[getObjectClass(layerType)],["<enumerated>",["ordinal","targetEnum"]]]]];};jamLayers.setLayerType=function(layerType) {var setDesc={"target":this.toLayerTypeReference(layerType),"to":this.toLayerTypeObject(layerType)};jamEngine.jsonPlay("set",setDesc);};jamLayers.groupLayer=function() {jamEngine.jsonPlay("groupEvent");};jamLayers.ungroupLayer=function() {jamEngine.jsonPlay("ungroup");};}());}
if(typeof jamShapes!=='object') {var jamShapes={};(function() {jamShapes.isCustomShapesFile=function(file) {return(file.type==='8BCS')||file.name.match(/\.csh$/i);};jamShapes.isCustomShapesPrefsFile=function(file) {return file.name.match(/^CustomShapes.psp$/i);};jamShapes.dataFromCustomShapesFile=function(shapesFile,shapeIndex) {function skipBytes(file,byteCount) {file.seek(byteCount,1);} function readBEInt(file,byteCount) {var bytes=file.read(byteCount);var intValue=0;for(var index=0;index<byteCount;index++) {intValue=(intValue<<8)+bytes.charCodeAt(index);} return intValue;} function readBytes(file,byteCount) {return file.read(byteCount);} function readPascalString(file) {var stringLength=readBEInt(file,1);return readBytes(file,stringLength);} function readUnicodeStringWithPadding(file) {var unicodeString="";var unicodeLength=readBEInt(file,4);for(var index=0;index<unicodeLength;index++) {var unicodeChar=readBEInt(file,2);if(unicodeChar!==0) {unicodeString+=String.fromCharCode(unicodeChar);}} if((unicodeLength%2)!==0) {skipBytes(file,2);} return unicodeString;} function readSignedBEInt32(file) {var intValue=readBEInt(file,4);return(intValue<0x80000000)?intValue:(intValue-0x100000000);} function readSignedBEFixed32(file) {return readSignedBEInt32(file)/0x1000000;} var file;if(typeof shapesFile==='string') {file=new File(shapesFile);} else if(shapesFile instanceof File) {file=shapesFile;} else {throw new Error('[jamShapes.dataFromCustomShapesFile] Invalid argument');} var selectorStrings=["closedLength","closedLinked","closedUnlinked","openLength","openLinked","openUnlinked","pathFill","clipboard","initialFill"];var fileData;if(file.open("r")) {try {file.encoding='BINARY';var magicNumber=file.read(4);if(magicNumber==='cush') {var fileVersion=readBEInt(file,4);if(fileVersion===2) {fileData={};fileData["fileVersion"]=fileVersion;var customShapes=[];var customShapeCount=readBEInt(file,4);for(var customShapeIndex=0;customShapeIndex<customShapeCount;customShapeIndex++) {var customShape={};customShape["name"]=localize(readUnicodeStringWithPadding(file));var unknown=jamUtils.dataToHexaString(readBytes(file,4));var dataLength=readBEInt(file,4);var dataStart=file.tell();customShape["ID"]=readPascalString(file);if((typeof shapeIndex==='undefined')||(shapeIndex===customShapeIndex)) {var top=readSignedBEInt32(file);var left=readSignedBEInt32(file);var bottom=readSignedBEInt32(file);var right=readSignedBEInt32(file);customShape["bounds"]=[top,left,bottom,right];var pathRecords=[];var pathRecordCount=Math.floor((dataStart+dataLength-file.tell())/(2+8+8+8));for(var pathRecordIndex=0;pathRecordIndex<pathRecordCount;pathRecordIndex++) {var pathRecord=[];var selector=readBEInt(file,2);if((selector>=0)&&(selector<selectorStrings.length)) {pathRecord.push(selectorStrings[selector]);} else {throw new Error("[jamShapes.dataFromCustomShapesFile] Unknown selector: "+selector);} switch(selector) {case 6:pathRecord.push(null);skipBytes(file,24);break;case 8:pathRecord.push(readBEInt(file,2));skipBytes(file,24-2);break;case 0:case 3:pathRecord.push(readBEInt(file,2));skipBytes(file,24-2);break;case 1:case 2:case 4:case 5:pathRecord.push ([[readSignedBEFixed32(file),readSignedBEFixed32(file)],[readSignedBEFixed32(file),readSignedBEFixed32(file)],[readSignedBEFixed32(file),readSignedBEFixed32(file)]]);break;default:pathRecord.push(null);skipBytes(file,24);break;} pathRecords.push(pathRecord);} customShape["pathRecords"]=pathRecords;} file.seek(dataStart+dataLength,0);customShapes.push(customShape);} fileData["customShapes"]=customShapes;} else {fileData="Unrecognized custom shapes file version: "+fileVersion;}} else {fileData="Unrecognized custom shapes file magic number: '"+magicNumber+"'";}} catch(e) {fileData=e.message;} finally {file.close();}} else {fileData="Cannot open file";} return fileData;};jamShapes.debugMode=false;jamShapes.pathComponentsFromCustomShape=function(customShape,shapeOperation,bounds,constrainProportions) {var rectangle=bounds[0];var unit=bounds[1];var left=rectangle[0];var top=rectangle[1];var right=rectangle[2];var bottom=rectangle[3];var width=right-left;var height=bottom-top;if(constrainProportions) {var adjustmentFactor=1;if((typeof unit!=='undefined')&&(jamEngine.uniIdStrToId(unit)===jamEngine.uniIdStrToId("percentUnit"))) {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescObj=jamEngine.jsonGet([{"document":["<enumerated>",["ordinal","first"]]}]);jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;adjustmentFactor=resultDescObj["width"][1][1]/resultDescObj["height"][1][1];} var boundsRatio=(width/height)*adjustmentFactor;var shapeWidth=customShape["bounds"][3]-customShape["bounds"][1];var shapeHeight=customShape["bounds"][2]-customShape["bounds"][0];var shapeRatio=shapeWidth/shapeHeight;if(shapeRatio>boundsRatio) {shapeHeight=(width/shapeRatio)*adjustmentFactor;top+=(height-shapeHeight)/2;height=shapeHeight;} else {shapeWidth=(height*shapeRatio)/adjustmentFactor;left+=(width-shapeWidth)/2;width=shapeWidth;}} var subpaths=[];if(this.debugMode) {var subpath=[[[left,top]],[[left+width,top]],[[left+width,top+height]],[[left,top+height]]];subpaths.push([subpath,true]);} else {var pathRecords=customShape["pathRecords"];var subLength=0;for(var pathRecordIndex=0;pathRecordIndex<pathRecords.length;pathRecordIndex++) {var pathRecord=pathRecords[pathRecordIndex];var selector=pathRecord[0];var data=pathRecord[1];switch(selector) {case"closedLength":case"openLength":subLength=data;var closedSubpath=(selector==="closedLength");var subpath=[];break;case"closedLinked":case"closedUnlinked":case"openLinked":case"openUnlinked":var backward=[left+(data[0][1]*width),top+(data[0][0]*height)];var anchor=[left+(data[1][1]*width),top+(data[1][0]*height)];var forward=[left+(data[2][1]*width),top+(data[2][0]*height)];var smooth=(selector==="closedLinked")||(selector==="openLinked");subpath.push([anchor,forward,backward,smooth]);if(--subLength===0) {subpaths.push([subpath,closedSubpath]);} break;}}} var pathComponentsArr=[[[shapeOperation,subpaths]]];if(unit) {pathComponentsArr.push(unit);} return pathComponentsArr;};}());}
if(typeof jamStyles!=='object') {var jamStyles={};(function() {jamStyles.isStylesFile=function(file) {return(file.type==='8BSL')||file.name.match(/\.asl$/i);};jamStyles.isStylesPalette=function(file) {return file.name.match(/^Styles.psp$/i);};jamStyles.toLayerEffectsObject=function(layerEffects) {function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"align":case"antiAlias":case"antialiasGloss":case"continuity":case"dither":case"enabled":case"invert":case"invertTexture":case"layerConceals":case"linked":case"reverse":case"showTransparency":case"useGlobalAngle":case"useShape":case"useTexture":case"vectorColor":typedValue=["<boolean>",value];break;case"book":case"ID":case"name":typedValue=["<string>",localize(value)];break;case"bookKey":typedValue=["<data>",value];break;case"bookID":case"location":case"midpoint":case"randomSeed":case"smoothness":typedValue=["<integer>",value];break;case"a":case"b":case"black":case"blue":case"brightness":case"cyan":case"gray":case"green":case"interpolation":case"luminance":case"magenta":case"red":case"saturation":case"yellowColor":typedValue=["<double>",value];break;case"angle":case"hue":case"localLightingAngle":case"localLightingAltitude":typedValue=["<unitDouble>",["angleUnit",value]];break;case"chokeMatte":case"highlightOpacity":case"inputRange":case"noise":case"opacity":case"scale":case"shadingNoise":case"shadowOpacity":case"strengthRatio":case"textureDepth":typedValue=["<unitDouble>",["percentUnit",value]];break;case"blur":case"distance":case"size":case"softness":typedValue=["<unitDouble>",["pixelsUnit",value]];break;case"horizontal":case"vertical":typedValue=(hintData)?["<unitDouble>",[hintData,value]]:["<double>",value];break;case"type":var enumType;switch(value) {case"linear":case"radial":case"angle":case"reflected":case"diamond":case"shapeburst":enumType="gradientType";break;case"foregroundColor":case"backgroundColor":case"userStop":enumType="colorStopType";break;} typedValue=["<enumerated>",[enumType,value]];break;case"colorSpace":typedValue=["<enumerated>",["colorSpace",value]];break;case"gradientForm":typedValue=["<enumerated>",["gradientForm",value]];break;case"paintType":typedValue=["<enumerated>",["frameFill",value]];break;case"bevelDirection":typedValue=["<enumerated>",["bevelEmbossStampStyle",value]];break;case"bevelStyle":typedValue=["<enumerated>",["bevelEmbossStyle",value]];break;case"bevelTechnique":typedValue=["<enumerated>",["bevelTechnique",value]];break;case"glowTechnique":typedValue=["<enumerated>",["matteTechnique",value]];break;case"innerGlowSource":typedValue=["<enumerated>",["innerGlowSourceType",value]];break;case"style":typedValue=["<enumerated>",["frameStyle",value]];break;case"highlightMode":case"mode":case"shadowMode":typedValue=["<enumerated>",["blendMode",value]];break;case"bevelEmboss":case"chromeFX":case"dropShadow":case"frameFX":case"gradientFill":case"innerGlow":case"innerShadow":case"outerGlow":case"pattern":case"patternFill":case"solidFill":typedValue=["<object>",[key,restoreDesc(value)]];break;case"color":case"highlightColor":case"shadowColor":var colorClass;if((("book"in value)&&("name"in value))||(("bookID"in value)&&("bookKey"in value))) {colorClass="bookColor";} else if(("cyan"in value)&&("magenta"in value)&&("yellowColor"in value)&&("black"in value)) {colorClass="CMYKColorClass";} else if("gray"in value) {colorClass="grayscale";} else if(("hue"in value)&&("saturation"in value)&&("brightness"in value)) {colorClass="HSBColorClass";} else if(("luminance"in value)&&("a"in value)&&("b"in value)) {colorClass="labColor";} else if(("red"in value)&&("green"in value)&&("blue"in value)) {colorClass="RGBColor";} typedValue=["<object>",[colorClass,restoreDesc(value)]];break;case"gradient":typedValue=["<object>",["gradientClassEvent",restoreDesc(value)]];break;case"mappingShape":case"transparencyShape":typedValue=["<object>",["shapingCurve",restoreDesc(value)]];break;case"offset":typedValue=["<object>",["point",restoreDesc(value,"percentUnit")]];break;case"phase":typedValue=["<object>",["point",restoreDesc(value)]];break;case"minimum":case"maximum":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<integer>",value[i]]);} typedValue=["<list>",restoredList];break;case"colors":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["colorStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"transparency":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["transparencyStop",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"curve":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["curvePoint",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"layerEffects":typedValue=["<object>",["layerEffects",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc({"layerEffects":layerEffects})["layerEffects"];};jamStyles.fromLayerEffectsObject=function(layerEffectsObject) {return jamEngine.simplifyObject(layerEffectsObject);};jamStyles.toBlendOptionsObject=function(blendOptions) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"blendClipped":case"blendInterior":case"layerMaskAsGlobalMask":case"transparencyShapesLayer":case"vectorMaskAsGlobalMask":typedValue=["<boolean>",value];break;case"srcBlackMin":case"srcBlackMax":case"srcWhiteMin":case"srcWhiteMax":case"destBlackMin":case"destBlackMax":case"destWhiteMin":case"destWhiteMax":typedValue=["<integer>",value];break;case"fillOpacity":case"opacity":typedValue=["<unitDouble>",["percentUnit",value]];break;case"mode":typedValue=["<enumerated>",["blendMode",value]];break;case"knockout":typedValue=["<enumerated>",["knockout",value]];break;case"channel":typedValue=["<reference>",[["channel",["<enumerated>",["channel",value]]]]];break;case"blendRange":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",["blendRange",restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"channelRestrictions":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<enumerated>",["channel",value[i]]]);} typedValue=["<list>",restoredList];break;case"blendOptions":typedValue=["<object>",["blendOptions",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc({"blendOptions":blendOptions})["blendOptions"];};jamStyles.fromBlendOptionsObject=function(blendOptionsObject) {var replaceChannelHook=function(desc,key,getDefaultValue) {var replacedValue=undefined;if(key==="channel") {var value=getDefaultValue(desc,key);replacedValue=value[0]["channel"];} return replacedValue;};return jamEngine.simplifyObject(blendOptionsObject,replaceChannelHook);};jamStyles.toDocumentModeObject=function(documentMode) {function restoreDesc(desc) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;switch(key) {case"colorSpace":typedValue=["<enumerated>",["colorSpace",value]];break;case"depth":typedValue=["<integer>",value];break;case"documentMode":typedValue=["<object>",["documentMode",restoreDesc(value)]];break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc({"documentMode":documentMode})["documentMode"];};jamStyles.fromDocumentModeObject=function(documentModeObject) {return jamEngine.simplifyObject(documentModeObject);};function getDocumentMode() {var documentMode={};var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescObj;resultDescObj=jamEngine.jsonGet ([["property",["<property>","mode"]],["document",["<enumerated>",["ordinal","targetEnum"]]]]);documentMode["colorSpace"]=resultDescObj["mode"][1][1];resultDescObj=jamEngine.jsonGet ([["property",["<property>","depth"]],["document",["<enumerated>",["ordinal","targetEnum"]]]]);documentMode["depth"]=resultDescObj["depth"][1];jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return documentMode;} function getDocumentResolution() {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescObj=jamEngine.jsonGet ([["property",["<property>","resolution"]],["document",["<enumerated>",["ordinal","targetEnum"]]]]);jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return resultDescObj["resolution"][1][1];} jamStyles.setLayerStyle=function(layerStyleObj,ignoreScale) {if(layerStyleObj&&(("blendOptions"in layerStyleObj)||("layerEffects"in layerStyleObj))) {var layerDesc={};if("blendOptions"in layerStyleObj) {defaultBlendOptionsObj={"mode":"normal","opacity":100,"fillOpacity":100,"channelRestrictions":[],"knockout":"none","blendInterior":false,"blendClipped":true,"transparencyShapesLayer":true,"layerMaskAsGlobalMask":false,"vectorMaskAsGlobalMask":false,"blendRange":[]};var documentMode=getDocumentMode();var channelRestrictions;var blendRangeChannels;switch(documentMode["colorSpace"]) {case"CMYKColorEnum":case"CMYK64":channelRestrictions=["cyan","magenta","yellow","black"];blendRangeChannels=["gray","cyan","magenta","yellow","black"];break;case"duotone":case"grayScale":case"gray16":channelRestrictions=["black"];blendRangeChannels=["black"];break;case"labColor":case"lab48":channelRestrictions=["lightness","a","b"];blendRangeChannels=["lightness","a","b"];break;case"RGBColor":case"RGB48":channelRestrictions=["red","green","blue"];blendRangeChannels=["gray","red","green","blue"];break;} defaultBlendOptionsObj["channelRestrictions"]=channelRestrictions;for(var i=0;i<blendRangeChannels.length;i++) {defaultBlendRangeObj={"channel":blendRangeChannels[i],"srcBlackMin":0,"srcBlackMax":0,"srcWhiteMin":255,"srcWhiteMax":255,"destBlackMin":0,"destBlackMax":0,"destWhiteMin":255,"destWhiteMax":255};defaultBlendOptionsObj["blendRange"].push(defaultBlendRangeObj);} var blendOptionsObj=jamUtils.mergeData(layerStyleObj["blendOptions"],defaultBlendOptionsObj);var blendOptionsDesc=this.toBlendOptionsObject(blendOptionsObj)[1][1];for(var key in blendOptionsDesc) {if(blendOptionsDesc.hasOwnProperty(key)) {layerDesc[key]=blendOptionsDesc[key];}}} var layerEffects;if("layerEffects"in layerStyleObj) {layerEffects=layerStyleObj["layerEffects"];layerDesc["layerEffects"]=this.toLayerEffectsObject(layerEffects);} jamEngine.jsonPlay ("set",{"target":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]],"to":["<object>",["layer",layerDesc]]});if(layerEffects) {if(("scale"in layerEffects)&&(!ignoreScale)) {this.scaleLayerEffects((getDocumentResolution()/72)/(layerEffects["scale"]/100)*100);}}} else {this.clearLayerStyle();}};function getPresetStylesCount() {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescObj=jamEngine.jsonGet ([["property",["<property>","presetManager"]],["application",["<enumerated>",["ordinal","targetEnum"]]]]);var presetManagerArr=resultDescObj["presetManager"][1];var presetStylesCount;for(var i=0;i<presetManagerArr.length;i++) {var preset=presetManagerArr[i][1];if(preset[0]==="styleClass") {presetStylesCount=preset[1]["name"][1].length;break;}} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return presetStylesCount;} function isStyledLayer() {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var isLayer=false;try {var resultDescObj=jamEngine.jsonGet ([["property",["<property>","background"]],["layer",["<enumerated>",["ordinal","targetEnum"]]]]);isLayer=!resultDescObj["background"][1];} catch(e) {} var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;return isLayer;} jamStyles.getLayerStyle=function() {var layerStyleObj=null;if(isStyledLayer()) {var presetStylesCountBefore=getPresetStylesCount();var date=new Date();var tempStyleName="Temp-Layer-Style-"+date.getTime();try {jamEngine.jsonPlay ("make",{"target":["<reference>",[["style",["<class>",null]]]],"name":["<string>",tempStyleName],"using":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]],"blendOptions":["<boolean>",true],"layerEffects":["<boolean>",true]});} catch(e) {} var presetStylesCount=getPresetStylesCount();if(presetStylesCount===(presetStylesCountBefore+1)) {var tempStylesFile=new File(Folder.temp+"/"+tempStyleName+".asl");jamEngine.jsonPlay ("set",{"target":["<path>",tempStylesFile.fsName],"to":["<list>",[["<reference>",[["style",["<index>",presetStylesCount]]]]]]});jamEngine.jsonPlay ("delete",{"target":["<list>",[["<reference>",[["style",["<index>",presetStylesCount]]]]]]});var tempStylesFileData=this.dataFromStylesFile(tempStylesFile);if(typeof tempStylesFileData==='string') {alert(tempStylesFileData+"\n"+"Styles file: “"+File.decode(tempStylesFile.name)+"”");} else {layerStyleObj=tempStylesFileData["styles"][0];if("name"in layerStyleObj) {delete layerStyleObj["name"];} if("ID"in layerStyleObj) {delete layerStyleObj["ID"];} if("documentMode"in layerStyleObj) {delete layerStyleObj["documentMode"];} if("layerEffects"in layerStyleObj) {var layerEffects=layerStyleObj["layerEffects"];if("masterFXSwitch"in layerEffects) {delete layerEffects["masterFXSwitch"];}}} if(arguments.length>0) {var extraInfo=arguments[0];if(extraInfo&&(extraInfo.constructor===Object)) {if("patterns"in extraInfo) {var tempStylesFilePatterns=this.patternsFromStylesFile(tempStylesFile);if(typeof tempStylesFilePatterns==='string') {alert(tempStylesFilePatterns+"\n"+"Styles file: “"+File.decode(tempStylesFile.name)+"”");} else {extraInfo["patterns"]=tempStylesFilePatterns;}}}} tempStylesFile.remove();}} return layerStyleObj;};jamStyles.copyLayerStyle=function() {try {jamEngine.jsonPlay("copyEffects",null);} catch(e) {}};jamStyles.pasteLayerStyle=function() {try {jamEngine.jsonPlay("pasteEffects",{});} catch(e) {}};jamStyles.clearLayerStyle=function() {try {jamEngine.jsonPlay ("disableLayerStyle",{"target":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]]});} catch(e) {}};jamStyles.applyLayerStyle=function(styleName,merge) {var descriptor={"target":["<reference>",[["style",["<name>",styleName]]]],"to":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]]};if((typeof merge!=='undefined')&&merge) {descriptor["merge"]=["<boolean>",merge];} jamEngine.jsonPlay("applyStyle",descriptor);};jamStyles.scaleLayerEffects=function(scale) {jamEngine.jsonPlay("scaleEffectsEvent",{"scale":["<unitDouble>",["percentUnit",scale]]});};jamStyles.removeLayerEffect=function(effect) {try {jamEngine.jsonPlay ("disableSingleFX",{"target":["<reference>",[[effect,["<class>",null]],["layer",["<enumerated>",["ordinal","targetEnum"]]]]]});} catch(e) {}};jamStyles.removeLayerEffects=function(effects) {for(var i=0;i<effects.length;i++) {this.removeLayerEffect(effects[i]);}};jamStyles.removeAllLayerEffects=function() {try {jamEngine.jsonPlay ("disableLayerFX",{"target":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]]});} catch(e) {}};jamStyles.showHideLayerEffects=function(effects,show) {var references=[];for(var i=0;i<effects.length;i++) {references.push (["<reference>",[[effects[i],["<class>",null]],["layer",["<enumerated>",["ordinal","targetEnum"]]]]]);} try {jamEngine.jsonPlay((show)?"show":"hide",{"target":["<list>",references]},DialogModes.NO);} catch(e) {}};jamStyles.showHideLayerEffect=function(effect,show) {this.showHideLayerEffects([effect],show);};jamStyles.showHideAllLayerEffects=function(show) {this.showHideLayerEffects(["layerEffects"],show);};jamStyles.showHideAllDocumentEffects=function(show) {jamEngine.jsonPlay ("set",{"target":["<reference>",[["property",["<property>","layerFXVisible"]],["document",["<enumerated>",["ordinal","targetEnum"]]]]],"to":["<object>",["layerFXVisible",{"layerFXVisible":["<boolean>",show||false]}]]});};function setGlobalAngle(target,globalLightingAngle,globalAltitude) {var globalAngle={"globalLightingAngle":["<unitDouble>",["angleUnit",globalLightingAngle]]};if(typeof globalAltitude!=='undefined') {globalAngle["globalAltitude"]=["<unitDouble>",["angleUnit",globalAltitude]];} jamEngine.jsonPlay ("set",{"target":["<reference>",[["property",["<property>","globalAngle"]],[target,["<enumerated>",["ordinal","targetEnum"]]]]],"to":["<object>",["globalAngle",globalAngle]]});};jamStyles.setApplicationGlobalAngle=function(globalLightingAngle,globalAltitude) {setGlobalAngle("application",globalLightingAngle,globalAltitude);};jamStyles.setDocumentGlobalAngle=function(globalLightingAngle,globalAltitude) {setGlobalAngle("document",globalLightingAngle,globalAltitude);};function readBEInt(file,byteCount) {var bytes=file.read(byteCount);var intValue=0;for(var index=0;index<byteCount;index++) {intValue=(intValue<<8)+bytes.charCodeAt(index);} return intValue;} function readUnicodeString(file) {var unicodeString="";var unicodeLength=readBEInt(file,4);for(var index=0;index<unicodeLength;index++) {var unicodeChar=readBEInt(file,2);if(unicodeChar!==0) {unicodeString+=String.fromCharCode(unicodeChar);}} return unicodeString;} function readBytes(file,byteCount) {return file.read(byteCount);} function readPascalString(file) {var stringLength=readBEInt(file,1);return readBytes(file,stringLength);} jamStyles.dataFromStylesFile=function(stylesFile,includePatternsInfo) {var imageModes=["Bitmap","Grayscale","Indexed","RGB","CMYK",null,null,"Multichannel","Duotone","Lab"];var file;if(typeof stylesFile==='string') {file=new File(stylesFile);} else if(stylesFile instanceof File) {file=stylesFile;} var fileData;if(file.open("r")) {try {file.encoding='BINARY';var formatVersion;if(this.isStylesPalette(file)) {formatVersion=2;} else if(this.isStylesFile(file)) {formatVersion=readBEInt(file,2);} if(formatVersion===2) {var magicNumber=file.read(4);if(magicNumber==='8BSL') {var subVersion=readBEInt(file,2);if(subVersion===3) {var patternsLength=readBEInt(file,4);var patternsEnd=file.tell()+patternsLength;if(includePatternsInfo) {var patterns=[];while(file.tell()<patternsEnd) {var pattern={};var patternLength=readBEInt(file,4);var patternEnd=file.tell()+patternLength;var patternVersion=readBEInt(file,4);pattern["version"]=patternVersion;if(patternVersion===1) {pattern["imageMode"]=imageModes[readBEInt(file,4)];pattern["height"]=readBEInt(file,2);pattern["width"]=readBEInt(file,2);pattern["name"]=readUnicodeString(file);pattern["ID"]=readPascalString(file);} else {pattern["error"]="Unsupported version";} patterns.push(pattern);file.seek(patternEnd+((4-(patternLength%4))%4),0);}} file.seek(patternsEnd,0);var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var actionDescriptor;var jsonDesc;var styles=[];var styleCount=readBEInt(file,4);for(var i=0;i<styleCount;i++) {var style={};var styleLength=readBEInt(file,4);var styleEnd=file.tell()+styleLength;actionDescriptor=jamActions.readActionDescriptor(file);jsonDesc=jamEngine.classIdAndActionDescriptorToJson(0,actionDescriptor)["<descriptor>"];style["name"]=jsonDesc["name"][1];style["ID"]=jsonDesc["ID"][1];actionDescriptor=jamActions.readActionDescriptor(file);jsonDesc=jamEngine.classIdAndActionDescriptorToJson(0,actionDescriptor)["<descriptor>"];if("documentMode"in jsonDesc) {style["documentMode"]=this.fromDocumentModeObject(jsonDesc["documentMode"]);} if("blendOptions"in jsonDesc) {style["blendOptions"]=this.fromBlendOptionsObject(jsonDesc["blendOptions"]);} if("layerEffects"in jsonDesc) {style["layerEffects"]=this.fromLayerEffectsObject(jsonDesc["layerEffects"]);} styles.push(style);file.seek(styleEnd,0);} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;fileData={};if(includePatternsInfo) {fileData["patterns"]=patterns;} fileData["styles"]=styles;} else {throw new Error("[jamStyles.dataFromStylesFile] Unrecognized sub-version: "+subVersion);}} else {throw new Error("[jamStyles.dataFromStylesFile] Unrecognized magic number: "+magicNumber);}} else {throw new Error("[jamStyles.dataFromStylesFile] Unrecognized format version: "+formatVersion);}} catch(e) {fileData=e.message;} finally {file.close();}} else {fileData="[jamStyles.dataFromStylesFile] Cannot open file";} return fileData;};jamStyles.patternsFromStylesFile=function(stylesFile) {var file;if(typeof stylesFile==='string') {file=new File(stylesFile);} else if(stylesFile instanceof File) {file=stylesFile;} var patternsData;if(file.open("r")) {try {file.encoding='BINARY';var formatVersion;if(this.isStylesPalette(file)) {formatVersion=2;} else if(this.isStylesFile(file)) {formatVersion=readBEInt(file,2);} if(formatVersion===2) {var magicNumber=file.read(4);if(magicNumber==='8BSL') {var subVersion=readBEInt(file,2);if(subVersion===3) {var patternsLength=readBEInt(file,4);var patternsEnd=file.tell()+patternsLength;var patternsData=[];while(file.tell()<patternsEnd) {var patternLength=readBEInt(file,4);patternsData.push(readBytes(file,patternLength));file.seek((4-(patternLength%4))%4,1);}} else {throw new Error("[jamStyles.patternsFromStylesFile] Unrecognized sub-version: "+subVersion);}} else {throw new Error("[jamStyles.patternsFromStylesFile] Unrecognized magic number: "+magicNumber);}} else {throw new Error("[jamStyles.patternsFromStylesFile] Unrecognized format version: "+formatVersion);}} catch(e) {patternsData=e.message;} finally {file.close();}} else {patternsData="[jamStyles.patternsFromStylesFile] Cannot open file";} return patternsData;};jamStyles.patternsFileFromPatterns=function(patternsFile,patternsData) {var file;if(typeof patternsFile==='string') {file=new File(patternsFile);} else if(patternsFile instanceof File) {file=patternsFile;} if(file.open('w','8BPT','8BIM')) {file.encoding="BINARY";file.write('8BPT');file.write('\x00\x01');var count=patternsData.length;file.write(String.fromCharCode((count>>24)&0xFF,(count>>16)&0xFF,(count>>8)&0xFF,count&0xFF));for(var index=0;index<count;index++) {file.write(patternsData[index]);} file.close();}};}());}
if(typeof jamText!=='object') {var jamText={};(function() {jamText.toLayerTextObject=function(layerText) {var typeUnit;if("typeUnit"in layerText) {typeUnit=layerText["typeUnit"];} var data=layerText["layerText"];function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"bookKey":typedValue=["<data>",value];break;case"rowMajorOrder":case"syntheticBold":case"syntheticItalic":case"autoLeading":case"ligature":case"altligature":case"contextualLigatures":case"alternateLigatures":case"oldStyle":case"fractions":case"ordinals":case"swash":case"titling":case"connectionForms":case"stylisticAlternates":case"ornaments":case"proportionalMetrics":case"kana":case"italics":case"ruby":case"enableWariChu":case"noBreak":case"fill":case"stroke":case"fillFirst":case"fillOverPrint":case"strokeOverPrint":case"hyphenate":case"hyphenateCapitalized":case"hangingRoman":case"keepTogether":case"kurikaeshiMojiShori":case"textEveryLineComposer":case"flip":typedValue=["<boolean>",value];break;case"textKey":case"fontPostScriptName":case"fontName":case"fontStyleName":case"book":case"name":typedValue=["<string>",value];break;case"rowCount":case"columnCount":case"from":case"to":case"fontScript":case"fontTechnology":case"tracking":case"wariChuCount":case"wariChuLineGap":case"wariChuWidow":case"wariChuOrphan":case"tcyUpDown":case"tcyLeftRight":case"jiDori":case"bookID":case"dropCapMultiplier":case"hyphenateWordSize":case"hyphenatePreLength":case"hyphenatePostLength":case"hyphenateLimit":case"autoTCY":case"kerning":case"pathTypeSpacing":typedValue=["<integer>",value];break;case"warpValue":case"warpPerspective":case"warpPerspectiveOther":case"xx":case"xy":case"yx":case"yy":case"tx":case"ty":case"top":case"left":case"bottom":case"right":case"horizontalScale":case"verticalScale":case"characterRotation":case"mojiZume":case"wariChuScale":case"a":case"b":case"black":case"blue":case"brightness":case"cyan":case"gray":case"green":case"luminance":case"magenta":case"red":case"saturation":case"yellowColor":case"lineDashoffset":case"autoLeadingPercentage":case"hyphenationZone":case"hyphenationPreference":case"justificationWordMinimum":case"justificationWordDesired":case"justificationWordMaximum":case"justificationLetterMinimum":case"justificationLetterDesired":case"justificationLetterMaximum":case"justificationGlyphMinimum":case"justificationGlyphDesired":case"justificationGlyphMaximum":case"defaultTabWidth":case"start":case"end":typedValue=["<double>",value];break;case"rowGutter":case"columnGutter":case"spacing":case"firstBaselineMinimum":case"size":case"leading":case"baselineShift":case"underlineOffset":case"lineWidth":case"miterLimit":case"firstLineIndent":case"startIndent":case"endIndent":case"spaceBefore":case"spaceAfter":typedValue=(typeUnit)?["<unitDouble>",[typeUnit,value]]:["<double>",value];break;case"horizontal":case"vertical":typedValue=(hintData)?["<unitDouble>",[hintData,value]]:["<double>",value];break;case"hue":typedValue=["<unitDouble>",["angleUnit",value]];break;case"warpStyle":case"textGridding":case"orientation":case"textType":case"frameBaselineAlignment":case"autoKern":case"fontCaps":case"baseline":case"otbaseline":case"strikethrough":case"underline":case"figureStyle":case"baselineDirection":case"textLanguage":case"japaneseAlternate":case"gridAlignment":case"wariChuJustification":case"lineCap":case"lineJoin":case"leadingType":case"burasagari":case"preferredKinsokuOrder":case"pathTypeEffect":case"pathTypeAlignment":case"pathTypeAlignTo":typedValue=["<enumerated>",[key,value]];break;case"antiAlias":typedValue=["<enumerated>",["antiAliasType",value]];break;case"warpRotate":typedValue=["<enumerated>",["orientation",value]];break;case"alignment":case"singleWordJustification":typedValue=["<enumerated>",["alignmentType",value]];break;case"textShape":case"textStyleRange":case"paragraphStyleRange":case"kerningRange":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",[key,restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"warp":case"transform":case"textStyle":case"paragraphStyle":typedValue=["<object>",[key,restoreDesc(value)]];break;case"defaultStyle":typedValue=["<object>",["textStyle",restoreDesc(value)]];break;case"color":case"strokeColor":var colorClass;if((("book"in value)&&("name"in value))||(("bookID"in value)&&("bookKey"in value))) {colorClass="bookColor";} else if(("cyan"in value)&&("magenta"in value)&&("yellowColor"in value)&&("black"in value)) {colorClass="CMYKColorClass";} else if("gray"in value) {colorClass="grayscale";} else if(("hue"in value)&&("saturation"in value)&&("brightness"in value)) {colorClass="HSBColorClass";} else if(("luminance"in value)&&("a"in value)&&("b"in value)) {colorClass="labColor";} else if(("red"in value)&&("green"in value)&&("blue"in value)) {colorClass="RGBColor";} typedValue=["<object>",[colorClass,restoreDesc(value)]];break;case"textClickPoint":typedValue=["<object>",["point",restoreDesc(value,"percentUnit")]];break;case"base":typedValue=["<object>",["point",restoreDesc(value)]];break;case"bounds":typedValue=["<object>",["rectangle",restoreDesc(value)]];break;case"path":typedValue=["<object>",["pathClass",{"pathComponents":jamHelpers.toPathComponentList(value)}]];break;case"tRange":typedValue=["<object>",["range",restoreDesc(value)]];break;case"textLayer":typedValue=["<object>",["textLayer",restoreDesc(value)]];break;case"mojiKumiName":case"kinsokuSetName":if(true) {typedValue=["<enumerated>",[key,value]];} else {typedValue=["<string>",value];} break;case"leftAki":case"rightAki":if(true) {typedValue=["<double>",value];} else {typedValue=(typeUnit)?["<unitDouble>",[typeUnit,value]]:["<double>",value];} break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc({"textLayer":data})["textLayer"];};jamText.fromLayerTextObject=function(layerTextObject) {var layerText={};var typeUnit;var typeDone=false;function getUnitsHook(desc,key) {var result;if(key==="path") {result=jamHelpers.fromPathComponentList(desc[key][1][1]["pathComponents"],true);} else if(!typeDone) {switch(key) {case"rowGutter":case"columnGutter":case"spacing":case"firstBaselineMinimum":case"size":case"leading":case"baselineShift":case"underlineOffset":case"lineWidth":case"miterLimit":case"firstLineIndent":case"startIndent":case"endIndent":case"spaceBefore":case"spaceAfter":case"leftAki":case"rightAki":var value=desc[key];if(value[0]==="<unitDouble>") {typeUnit=value[1][0];} typeDone=true;break;}} return result;} layerText["layerText"]=jamEngine.simplifyObject(layerTextObject,getUnitsHook);if(typeUnit) {layerText["typeUnit"]=typeUnit;} return layerText;};jamText.setLayerText=function(layerText) {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var isTextLayer=false;try {resultObj=jamEngine.jsonGet ([{"property":{"<property>":"textKey"}},{"layer":{"<enumerated>":{"ordinal":"targetEnum"}}}]);if("textKey"in resultObj) {isTextLayer=true;}} catch(e) {} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;if(isTextLayer) {jamEngine.jsonPlay ("set",{"target":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]],"to":this.toLayerTextObject(layerText)});} else {jamEngine.jsonPlay ("make",{"target":["<reference>",[["textLayer",["<class>",null]]]],"using":this.toLayerTextObject(layerText)});}};jamText.getLayerText=function() {var layerTextObj=null;var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;try {var resultObj=jamEngine.jsonGet ([{"property":{"<property>":"textKey"}},{"layer":{"<enumerated>":{"ordinal":"targetEnum"}}}]);if("textKey"in resultObj) {layerTextObj=this.fromLayerTextObject(resultObj["textKey"]);}} catch(e) {} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return layerTextObj;};}());}
if(typeof jamUtils!=='object') {var jamUtils={};(function() {jamUtils.toDistanceUnit=function(amount,amountBasePerInch) {return(amount/amountBasePerInch)*72.0;};jamUtils.fromDistanceUnit=function(amount,amountBasePerInch) {return(amount/72.0)*amountBasePerInch;};jamUtils.fontExists=function(fontPostScriptName) {var useDOM=true;var found=false;if(useDOM) {for(var i=0;i<app.fonts.length;i++) {if(app.fonts[i].postScriptName===fontPostScriptName) {found=true;break;}}} else {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescriptorObj=jamEngine.jsonGet ([["property",["<property>","fontList"]],["application",["<enumerated>",["ordinal","targetEnum"]]]]);var fontPostScriptNameArr=resultDescriptorObj["fontList"][1][1]["fontPostScriptName"][1];for(var i=0;i<fontPostScriptNameArr.length;i++) {if(fontPostScriptNameArr[i][1]===fontPostScriptName) {found=true;break;}} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;} return found;};jamUtils.loadAction=function(action,actionSet,actionsFilePath) {try {jamEngine.jsonGet([["action",["<name>",action]],["actionSet",["<name>",actionSet]]]);var found=true;} catch(e) {var found=false;} if(!found) {jamEngine.jsonPlay("open",{"target":["<path>",actionsFilePath]});}};jamUtils.loadActionSet=function(actionSet,actionsFilePath) {try {jamEngine.jsonGet([["actionSet",["<name>",actionSet]]]);var found=true;} catch(e) {var found=false;} if(!found) {jamEngine.jsonPlay("open",{"target":["<path>",actionsFilePath]});}};jamUtils.loadPreset=function(presetProperty,presetName,presetFilePath) {var useDOM=false;var useOpen=true;var classes={"brush":"brush","colors":"color","gradientClassEvent":"gradientClassEvent","style":"styleClass","pattern":"'PttR'","shapingCurve":"shapingCurve","customShape":"customShape","toolPreset":"toolPreset"};var presetClass=classes[presetProperty];var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var found=false;var resultDescriptorObj=jamEngine.jsonGet ([["property",["<property>","presetManager"]],["application",["<enumerated>",["ordinal","targetEnum"]]]]);var presetManagerArr=resultDescriptorObj["presetManager"][1];for(var i=0;i<presetManagerArr.length;i++) {var presets=presetManagerArr[i][1];if(presets[0]===presetClass) {var presetsArr=presets[1]["name"][1];for(var j=0;j<presetsArr.length;j++) {if(presetsArr[j][1]===presetName) {found=true;break;}} break;}} if(!found) {if(useDOM) {app.load(new File(presetFilePath));} else if(useOpen) {jamEngine.jsonPlay("open",{"target":["<path>",presetFilePath]});} else {jamEngine.jsonPlay ("set",{"target":["<reference>",[["property",["<property>",presetProperty]],["application",["<enumerated>",["ordinal","targetEnum"]]]]],"to":["<path>",presetFilePath],"append":["<boolean>",true]});}} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;};function getFileObject(file) {var fileObject;if(file instanceof File) {fileObject=file;} else if(typeof file==='string') {fileObject=new File(file);} else {throw new Error('[jamUtils getFileObject] Invalid argument');} return fileObject;} jamUtils.readTextFile=function(textFile) {var text=null;var file=getFileObject(textFile);if(file.open("r")) {text=file.read();file.close();} return text;};jamUtils.readJsonFile=function(jsonFile) {return jamJSON.parse(this.readTextFile(jsonFile),true);};jamUtils.writeTextFile=function(textFile,text) {var file=getFileObject(textFile);if(file.open('w','TEXT')) {file.encoding='UTF-8';file.lineFeed='unix';file.write('\uFEFF');file.write(text);file.close();}};jamUtils.writeJsonFile=function(jsonFile,data,space) {this.writeTextFile(jsonFile,jamJSON.stringify(data,space));};jamUtils.cloneData=function(data) {var clone;if(data===null) {clone=data;} else if(data.constructor===Object) {clone={};for(var k in data) {if(data.hasOwnProperty(k)) {clone[k]=this.cloneData(data[k]);}}} else if(data.constructor===Array) {clone=[];for(var i=0;i<data.length;i++) {clone.push(this.cloneData(data[i]));}} else {clone=data;} return clone;};jamUtils.mergeData=function(data,defaultData) {for(var k in defaultData) {if(defaultData.hasOwnProperty(k)) {if(k in data) {if((defaultData[k]!==null)&&(defaultData[k].constructor===Object)) {data[k]=this.mergeData(data[k],defaultData[k]);}} else {data[k]=this.cloneData(defaultData[k]);}}} return data;};var jsonCustomOptionsStringKey="jsonCustomOptions";jamUtils.getCustomOptions=function(signature,defaultOptions) {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=false;try {var resultObj=jamEngine.classIdAndActionDescriptorToJson(jamEngine.uniIdStrToId(signature),app.getCustomOptions(signature));var customOptions=jamJSON.parse(resultObj["<descriptor>"][jsonCustomOptionsStringKey]["<string>"],true)} catch(e) {var customOptions={};} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return this.mergeData(customOptions,defaultOptions);};jamUtils.putCustomOptions=function(signature,customOptions,persistent) {var descriptorObj={};descriptorObj[jsonCustomOptionsStringKey]=["<string>",jamJSON.stringify(customOptions)];app.putCustomOptions(signature,jamEngine.jsonToActionDescriptor(descriptorObj),persistent);};jamUtils.eraseCustomOptions=function(signature) {app.eraseCustomOptions(signature);};jamUtils.dataToHexaString=function(dataString,lowercase) {var hexaDigits=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];var hexaString="";var length=dataString.length;for(var index=0;index<length;index++) {var dataByte=dataString.charCodeAt(index);if((dataByte>=0x00)&&(dataByte<=0xFF)) {hexaString+=hexaDigits[(dataByte&0xF0)>>4]+hexaDigits[dataByte&0x0F];} else {throw new Error("[jamUtils.dataToHexaString] Invalid data string");}} if(lowercase) {hexaString=hexaString.toLowerCase();} return hexaString;};jamUtils.hexaToDataString=function(hexaString) {var dataString="";var length=hexaString.length;if(((length%2)===0)&&(/^[0-9A-Fa-f]*$/.test(hexaString))) {for(var index=0;index<length;index+=2) {var byteString=hexaString.slice(index,index+2);dataString+=String.fromCharCode(parseInt(byteString,16));}} else {throw new Error("[jamUtils.hexaToDataString] Invalid hexa string");} return dataString;};}());}
